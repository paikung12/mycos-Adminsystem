'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _isArray = require('./isArray');

var _isArray2 = _interopRequireDefault(_isArray);

var _arrays = require('./arrays');

var arrays = _interopRequireWildcard(_arrays);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var createFieldProps = function createFieldProps(type, value, preProps) {
  switch (type) {
    case 'checkbox':
      return _extends({}, preProps, {
        input: _extends({}, preProps.input, {
          checked: (0, _isArray2.default)(value) ? arrays.includes(value, preProps.input.value) : value === preProps.input.value
        })
      });

    case 'radio':
      return _extends({}, preProps, {
        input: _extends({}, preProps.input, {
          checked: value === preProps.input.value
        })
      });

    case 'select-multiple':
      return _extends({}, preProps, {
        input: _extends({}, preProps.input, {
          value: value || []
        })
      });

    case 'file':
      return _extends({}, preProps, {
        input: _extends({}, preProps.input, {
          value: value || undefined
        })
      });

    default:
      return _extends({}, preProps, {
        input: _extends({}, preProps.input, {
          value: value
        })
      });
  }
};

exports.default = createFieldProps;