{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { useRef } from \"react\";\nexport function useMultipleForm(onChange) {\n  var stateRef = useRef({}); // private API\n\n  var _useRef = useRef(function (formName, state) {\n    stateRef.current[formName] = state;\n\n    if (typeof onChange === \"function\") {\n      onChange(mergeFormStates(stateRef.current));\n    }\n  }),\n      _onMultipleForm_ = _useRef.current; // private API\n\n\n  var _useRef2 = useRef(function (formName) {\n    return stateRef.current[formName];\n  }),\n      _getInitilaStateForm_ = _useRef2.current;\n\n  var _useRef3 = useRef(function () {\n    return mergeFormStates(stateRef.current);\n  }),\n      getState = _useRef3.current;\n\n  return [getState, {\n    _getInitilaStateForm_: _getInitilaStateForm_,\n    _onMultipleForm_: _onMultipleForm_\n  }];\n}\n\nfunction mergeFormStates(formStates) {\n  return Object.keys(formStates).reduce(function (acc, key) {\n    return _extends({}, acc, formStates[key]);\n  }, {});\n}","map":{"version":3,"sources":["/Users/auttapongkompiban/Spec_mycos/mycos-makub/node_modules/usetheform/build/es/hooks/useMultipleForm.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","useRef","useMultipleForm","onChange","stateRef","_useRef","formName","state","current","mergeFormStates","_onMultipleForm_","_useRef2","_getInitilaStateForm_","_useRef3","getState","formStates","keys","reduce","acc"],"mappings":"AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,SAASQ,MAAT,QAAuB,OAAvB;AACA,OAAO,SAASC,eAAT,CAAyBC,QAAzB,EAAmC;AACxC,MAAIC,QAAQ,GAAGH,MAAM,CAAC,EAAD,CAArB,CADwC,CACb;;AAE3B,MAAII,OAAO,GAAGJ,MAAM,CAAC,UAAUK,QAAV,EAAoBC,KAApB,EAA2B;AAC9CH,IAAAA,QAAQ,CAACI,OAAT,CAAiBF,QAAjB,IAA6BC,KAA7B;;AAEA,QAAI,OAAOJ,QAAP,KAAoB,UAAxB,EAAoC;AAClCA,MAAAA,QAAQ,CAACM,eAAe,CAACL,QAAQ,CAACI,OAAV,CAAhB,CAAR;AACD;AACF,GANmB,CAApB;AAAA,MAOIE,gBAAgB,GAAGL,OAAO,CAACG,OAP/B,CAHwC,CAUA;;;AAGxC,MAAIG,QAAQ,GAAGV,MAAM,CAAC,UAAUK,QAAV,EAAoB;AACxC,WAAOF,QAAQ,CAACI,OAAT,CAAiBF,QAAjB,CAAP;AACD,GAFoB,CAArB;AAAA,MAGIM,qBAAqB,GAAGD,QAAQ,CAACH,OAHrC;;AAKA,MAAIK,QAAQ,GAAGZ,MAAM,CAAC,YAAY;AAChC,WAAOQ,eAAe,CAACL,QAAQ,CAACI,OAAV,CAAtB;AACD,GAFoB,CAArB;AAAA,MAGIM,QAAQ,GAAGD,QAAQ,CAACL,OAHxB;;AAKA,SAAO,CAACM,QAAD,EAAW;AAChBF,IAAAA,qBAAqB,EAAEA,qBADP;AAEhBF,IAAAA,gBAAgB,EAAEA;AAFF,GAAX,CAAP;AAID;;AAED,SAASD,eAAT,CAAyBM,UAAzB,EAAqC;AACnC,SAAO1B,MAAM,CAAC2B,IAAP,CAAYD,UAAZ,EAAwBE,MAAxB,CAA+B,UAAUC,GAAV,EAAetB,GAAf,EAAoB;AACxD,WAAOR,QAAQ,CAAC,EAAD,EAAK8B,GAAL,EAAUH,UAAU,CAACnB,GAAD,CAApB,CAAf;AACD,GAFM,EAEJ,EAFI,CAAP;AAGD","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useRef } from \"react\";\nexport function useMultipleForm(onChange) {\n  var stateRef = useRef({}); // private API\n\n  var _useRef = useRef(function (formName, state) {\n    stateRef.current[formName] = state;\n\n    if (typeof onChange === \"function\") {\n      onChange(mergeFormStates(stateRef.current));\n    }\n  }),\n      _onMultipleForm_ = _useRef.current; // private API\n\n\n  var _useRef2 = useRef(function (formName) {\n    return stateRef.current[formName];\n  }),\n      _getInitilaStateForm_ = _useRef2.current;\n\n  var _useRef3 = useRef(function () {\n    return mergeFormStates(stateRef.current);\n  }),\n      getState = _useRef3.current;\n\n  return [getState, {\n    _getInitilaStateForm_: _getInitilaStateForm_,\n    _onMultipleForm_: _onMultipleForm_\n  }];\n}\n\nfunction mergeFormStates(formStates) {\n  return Object.keys(formStates).reduce(function (acc, key) {\n    return _extends({}, acc, formStates[key]);\n  }, {});\n}"]},"metadata":{},"sourceType":"module"}