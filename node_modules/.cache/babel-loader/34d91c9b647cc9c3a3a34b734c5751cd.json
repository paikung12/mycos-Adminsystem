{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/auttapongkompiban/Spec_mycos/mycos-makub-admin/src/components/Cards/CardOtherleaves/OtherBarChart.tsx\";\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { Chart, ArgumentAxis, ValueAxis, LineSeries, Title, Legend } from '@devexpress/dx-react-chart-material-ui';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Animation } from '@devexpress/dx-react-chart';\nconst data = [{\n  year: 1995,\n  ru: 101,\n  ch: 170,\n  us: 31\n}, {\n  year: 1998,\n  ru: 200,\n  ch: 80,\n  us: 90\n}, {\n  year: 2000,\n  ru: 100,\n  ch: 70,\n  us: 45\n}];\n\nconst format = () => tick => tick;\n\nconst legendStyles = () => ({\n  root: {\n    display: 'flex',\n    margin: 'auto',\n    flexDirection: 'row'\n  }\n});\n\nconst legendLabelStyles = theme => ({\n  label: {\n    paddingTop: theme.spacing(1),\n    whiteSpace: 'nowrap'\n  }\n});\n\nconst legendItemStyles = () => ({\n  item: {\n    flexDirection: 'column'\n  }\n});\n\nconst legendRootBase = ({\n  classes,\n  ...restProps\n}) => /*#__PURE__*/_jsxDEV(Legend.Root, { ...restProps,\n  className: classes.root\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 46,\n  columnNumber: 3\n}, this);\n\nconst legendLabelBase = ({\n  classes,\n  ...restProps\n}) => /*#__PURE__*/_jsxDEV(Legend.Label, {\n  className: classes.label,\n  ...restProps\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 49,\n  columnNumber: 3\n}, this);\n\nconst legendItemBase = ({\n  classes,\n  ...restProps\n}) => /*#__PURE__*/_jsxDEV(Legend.Item, {\n  className: classes.item,\n  ...restProps\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 52,\n  columnNumber: 3\n}, this);\n\nconst Root = withStyles(legendStyles, {\n  name: 'LegendRoot'\n})(legendRootBase);\nconst Label = withStyles(legendLabelStyles, {\n  name: 'LegendLabel'\n})(legendLabelBase);\nconst Item = withStyles(legendItemStyles, {\n  name: 'LegendItem'\n})(legendItemBase);\n\nconst demoStyles = () => ({\n  chart: {\n    paddingRight: '20px'\n  },\n  title: {\n    whiteSpace: 'pre'\n  }\n});\n\nconst ValueLabel = props => {\n  const {\n    text\n  } = props;\n  return /*#__PURE__*/_jsxDEV(ValueAxis.Label, { ...props,\n    text: `${text}%`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ValueLabel;\nconst titleStyles = {\n  title: {\n    whiteSpace: 'pre'\n  }\n};\nconst TitleText = withStyles(titleStyles)(({\n  classes,\n  ...props\n}) => /*#__PURE__*/_jsxDEV(Title.Text, { ...props,\n  className: classes.title\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 82,\n  columnNumber: 3\n}, this));\n\nclass Demo extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data\n    };\n  }\n\n  render() {\n    const {\n      data: chartData\n    } = this.state;\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        data: chartData,\n        className: classes.chart,\n        children: [/*#__PURE__*/_jsxDEV(ArgumentAxis, {\n          tickFormat: format\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ValueAxis, {\n          max: 50,\n          labelComponent: ValueLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LineSeries, {\n          name: \"TV news\",\n          valueField: \"tvNews\",\n          argumentField: \"year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LineSeries, {\n          name: \"Church\",\n          valueField: \"church\",\n          argumentField: \"year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LineSeries, {\n          name: \"Military\",\n          valueField: \"military\",\n          argumentField: \"year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          position: \"bottom\",\n          rootComponent: Root,\n          itemComponent: Item,\n          labelComponent: Label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          text: `Confidence in Institutions in American society ${'\\n'}(Great deal)`,\n          textComponent: TitleText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Animation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default withStyles(demoStyles, {\n  name: 'Demo'\n})(Demo);\n\nvar _c;\n\n$RefreshReg$(_c, \"ValueLabel\");","map":{"version":3,"sources":["/Users/auttapongkompiban/Spec_mycos/mycos-makub-admin/src/components/Cards/CardOtherleaves/OtherBarChart.tsx"],"names":["React","Paper","Chart","ArgumentAxis","ValueAxis","LineSeries","Title","Legend","withStyles","Animation","data","year","ru","ch","us","format","tick","legendStyles","root","display","margin","flexDirection","legendLabelStyles","theme","label","paddingTop","spacing","whiteSpace","legendItemStyles","item","legendRootBase","classes","restProps","legendLabelBase","legendItemBase","Root","name","Label","Item","demoStyles","chart","paddingRight","title","ValueLabel","props","text","titleStyles","TitleText","Demo","PureComponent","constructor","state","render","chartData"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport {\n  Chart,\n  ArgumentAxis,\n  ValueAxis,\n  LineSeries,\n  Title,\n  Legend,\n} from '@devexpress/dx-react-chart-material-ui';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Animation } from '@devexpress/dx-react-chart';\n\nconst data = [\n  {\n    year: 1995, ru: 101, ch: 170, us: 31,\n  },\n  {\n    year: 1998, ru: 200, ch: 80, us: 90,\n  },\n  {\n    year: 2000, ru: 100, ch: 70, us: 45,\n  },\n];\nconst format = () => (tick:any) => tick;\nconst legendStyles = () => ({\n  root: {\n    display: 'flex',\n    margin: 'auto',\n    flexDirection: 'row',\n  },\n});\nconst legendLabelStyles = (theme:any) => ({\n  label: {\n    paddingTop: theme.spacing(1),\n    whiteSpace: 'nowrap',\n  },\n});\nconst legendItemStyles = () => ({\n  item: {\n    flexDirection: 'column',\n  },\n});\n\nconst legendRootBase = ({ classes, ...restProps }:any) => (\n  <Legend.Root {...restProps} className={classes.root} />\n);\nconst legendLabelBase = ({ classes, ...restProps }) => (\n  <Legend.Label className={classes.label} {...restProps} />\n);\nconst legendItemBase = ({ classes, ...restProps }) => (\n  <Legend.Item className={classes.item} {...restProps} />\n);\nconst Root = withStyles(legendStyles, { name: 'LegendRoot' })(legendRootBase);\nconst Label = withStyles(legendLabelStyles, { name: 'LegendLabel' })(legendLabelBase);\nconst Item = withStyles(legendItemStyles, { name: 'LegendItem' })(legendItemBase);\nconst demoStyles = () => ({\n  chart: {\n    paddingRight: '20px',\n  },\n  title: {\n    whiteSpace: 'pre',\n  },\n});\n\nconst ValueLabel = (props) => {\n  const { text } = props;\n  return (\n    <ValueAxis.Label\n      {...props}\n      text={`${text}%`}\n    />\n  );\n};\n\nconst titleStyles = {\n  title: {\n    whiteSpace: 'pre',\n  },\n};\nconst TitleText = withStyles(titleStyles)(({ classes, ...props }) => (\n  <Title.Text {...props} className={classes.title} />\n));\n\nclass Demo extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data,\n    };\n  }\n\n  render() {\n    const { data: chartData } = this.state;\n    const { classes } = this.props;\n\n    return (\n      <Paper>\n        <Chart\n          data={chartData}\n          className={classes.chart}\n        >\n          <ArgumentAxis tickFormat={format} />\n          <ValueAxis\n            max={50}\n            labelComponent={ValueLabel}\n          />\n\n          <LineSeries\n            name=\"TV news\"\n            valueField=\"tvNews\"\n            argumentField=\"year\"\n          />\n          <LineSeries\n            name=\"Church\"\n            valueField=\"church\"\n            argumentField=\"year\"\n          />\n          <LineSeries\n            name=\"Military\"\n            valueField=\"military\"\n            argumentField=\"year\"\n          />\n          <Legend position=\"bottom\" rootComponent={Root} itemComponent={Item} labelComponent={Label} />\n          <Title\n            text={`Confidence in Institutions in American society ${'\\n'}(Great deal)`}\n            textComponent={TitleText}\n          />\n          <Animation />\n        </Chart>\n      </Paper>\n    );\n  }\n}\n\nexport default withStyles(demoStyles, { name: 'Demo' })(Demo);\n"]},"metadata":{},"sourceType":"module"}