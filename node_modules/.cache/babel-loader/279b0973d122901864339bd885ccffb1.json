{"ast":null,"code":"import { useRef, useCallback } from \"react\";\nexport function useMapFields(nameProp, context, type) {\n  if (type === void 0) {\n    type = \"object\";\n  }\n\n  var mapFields = useRef({});\n  var updateRegisteredField = useCallback(function (propName, map) {\n    mapFields.current[propName] = map;\n  }, []);\n  var unRegisterField = useCallback(function (propName) {\n    delete mapFields.current[propName];\n\n    if (type === \"array\") {\n      mapFields.current = keepIndexSync(mapFields.current);\n    }\n\n    context == null ? void 0 : context.updateRegisteredField == null ? void 0 : context.updateRegisteredField(nameProp.current, mapFields.current);\n  }, []);\n  return {\n    unRegisterField: unRegisterField,\n    mapFields: mapFields,\n    updateRegisteredField: updateRegisteredField\n  };\n}\n\nfunction keepIndexSync(map) {\n  var _newMapArray$reduce;\n\n  var keys = Object.keys(map);\n  var mySelfKey = keys[keys.length - 1];\n  var mySelfVal = map[mySelfKey];\n  keys.pop();\n  var newMapArray = keys.map(function (key) {\n    return map[key];\n  });\n  return newMapArray.reduce(function (acc, val, index) {\n    acc[index] = val;\n    return acc;\n  }, (_newMapArray$reduce = {}, _newMapArray$reduce[mySelfKey] = mySelfVal, _newMapArray$reduce));\n}","map":{"version":3,"sources":["/Users/auttapongkompiban/Spec_mycos/mycos-makub/node_modules/usetheform/build/es/hooks/useMapFields.js"],"names":["useRef","useCallback","useMapFields","nameProp","context","type","mapFields","updateRegisteredField","propName","map","current","unRegisterField","keepIndexSync","_newMapArray$reduce","keys","Object","mySelfKey","length","mySelfVal","pop","newMapArray","key","reduce","acc","val","index"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,WAAjB,QAAoC,OAApC;AACA,OAAO,SAASC,YAAT,CAAsBC,QAAtB,EAAgCC,OAAhC,EAAyCC,IAAzC,EAA+C;AACpD,MAAIA,IAAI,KAAK,KAAK,CAAlB,EAAqB;AACnBA,IAAAA,IAAI,GAAG,QAAP;AACD;;AAED,MAAIC,SAAS,GAAGN,MAAM,CAAC,EAAD,CAAtB;AACA,MAAIO,qBAAqB,GAAGN,WAAW,CAAC,UAAUO,QAAV,EAAoBC,GAApB,EAAyB;AAC/DH,IAAAA,SAAS,CAACI,OAAV,CAAkBF,QAAlB,IAA8BC,GAA9B;AACD,GAFsC,EAEpC,EAFoC,CAAvC;AAGA,MAAIE,eAAe,GAAGV,WAAW,CAAC,UAAUO,QAAV,EAAoB;AACpD,WAAOF,SAAS,CAACI,OAAV,CAAkBF,QAAlB,CAAP;;AAEA,QAAIH,IAAI,KAAK,OAAb,EAAsB;AACpBC,MAAAA,SAAS,CAACI,OAAV,GAAoBE,aAAa,CAACN,SAAS,CAACI,OAAX,CAAjC;AACD;;AAEDN,IAAAA,OAAO,IAAI,IAAX,GAAkB,KAAK,CAAvB,GAA2BA,OAAO,CAACG,qBAAR,IAAiC,IAAjC,GAAwC,KAAK,CAA7C,GAAiDH,OAAO,CAACG,qBAAR,CAA8BJ,QAAQ,CAACO,OAAvC,EAAgDJ,SAAS,CAACI,OAA1D,CAA5E;AACD,GARgC,EAQ9B,EAR8B,CAAjC;AASA,SAAO;AACLC,IAAAA,eAAe,EAAEA,eADZ;AAELL,IAAAA,SAAS,EAAEA,SAFN;AAGLC,IAAAA,qBAAqB,EAAEA;AAHlB,GAAP;AAKD;;AAED,SAASK,aAAT,CAAuBH,GAAvB,EAA4B;AAC1B,MAAII,mBAAJ;;AAEA,MAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYL,GAAZ,CAAX;AACA,MAAIO,SAAS,GAAGF,IAAI,CAACA,IAAI,CAACG,MAAL,GAAc,CAAf,CAApB;AACA,MAAIC,SAAS,GAAGT,GAAG,CAACO,SAAD,CAAnB;AACAF,EAAAA,IAAI,CAACK,GAAL;AACA,MAAIC,WAAW,GAAGN,IAAI,CAACL,GAAL,CAAS,UAAUY,GAAV,EAAe;AACxC,WAAOZ,GAAG,CAACY,GAAD,CAAV;AACD,GAFiB,CAAlB;AAGA,SAAOD,WAAW,CAACE,MAAZ,CAAmB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,KAApB,EAA2B;AACnDF,IAAAA,GAAG,CAACE,KAAD,CAAH,GAAaD,GAAb;AACA,WAAOD,GAAP;AACD,GAHM,GAGHV,mBAAmB,GAAG,EAAtB,EAA0BA,mBAAmB,CAACG,SAAD,CAAnB,GAAiCE,SAA3D,EAAsEL,mBAHnE,EAAP;AAID","sourcesContent":["import { useRef, useCallback } from \"react\";\nexport function useMapFields(nameProp, context, type) {\n  if (type === void 0) {\n    type = \"object\";\n  }\n\n  var mapFields = useRef({});\n  var updateRegisteredField = useCallback(function (propName, map) {\n    mapFields.current[propName] = map;\n  }, []);\n  var unRegisterField = useCallback(function (propName) {\n    delete mapFields.current[propName];\n\n    if (type === \"array\") {\n      mapFields.current = keepIndexSync(mapFields.current);\n    }\n\n    context == null ? void 0 : context.updateRegisteredField == null ? void 0 : context.updateRegisteredField(nameProp.current, mapFields.current);\n  }, []);\n  return {\n    unRegisterField: unRegisterField,\n    mapFields: mapFields,\n    updateRegisteredField: updateRegisteredField\n  };\n}\n\nfunction keepIndexSync(map) {\n  var _newMapArray$reduce;\n\n  var keys = Object.keys(map);\n  var mySelfKey = keys[keys.length - 1];\n  var mySelfVal = map[mySelfKey];\n  keys.pop();\n  var newMapArray = keys.map(function (key) {\n    return map[key];\n  });\n  return newMapArray.reduce(function (acc, val, index) {\n    acc[index] = val;\n    return acc;\n  }, (_newMapArray$reduce = {}, _newMapArray$reduce[mySelfKey] = mySelfVal, _newMapArray$reduce));\n}"]},"metadata":{},"sourceType":"module"}