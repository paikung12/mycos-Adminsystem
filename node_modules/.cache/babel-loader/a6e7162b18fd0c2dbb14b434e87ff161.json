{"ast":null,"code":"import ActionType from \"../../types/constant\";\nimport timeAttendanceService from '../services/timeAttendanceService';\nexport const addPasswordDispatch = pass => {\n  return {\n    type: ActionType.ADD_PASSWORD,\n    payload: pass\n  };\n};\nexport const addNoteDispatch = note => {\n  return {\n    type: ActionType.ADD_NOTE\n  };\n};\nexport const resetPasswordDispatch = () => {\n  return {\n    type: ActionType.RESET_PASSWORD\n  };\n};\nexport const deletePasswordDispatch = () => {\n  return {\n    type: ActionType.DELETE_PASSWORD\n  };\n};\nexport const resetNoteandExtratimeDispatch = () => {\n  return {\n    type: ActionType.RESET_NOTE_AND_EXTRATIME\n  };\n};\nexport const getEmployeeTimesDispatch = () => async dispatch => {\n  try {\n    dispatch({\n      type: ActionType.GET_EMPLOYEES_TIME_TODAY_START\n    });\n    const result = await timeAttendanceService.getTimeOfEmpsToday();\n    dispatch({\n      type: ActionType.GET_EMPLOYEES_TIME_TODAY_SUCCESS,\n      payload: result.data\n    });\n    dispatch({\n      type: ActionType.GET_NOTE_TODAY\n    });\n    dispatch({\n      type: ActionType.GET_EXTRATIME_START\n    });\n    dispatch({\n      type: ActionType.GET_EXTRATIME_END\n    });\n  } catch (err) {\n    console.log('getEmployeeTimesDispatch err: ', err);\n    dispatch({\n      type: ActionType.GET_EMPLOYEES_TIME_TODAY_ERROR,\n      payload: err\n    });\n  }\n};\nexport const postTimeDispatch = (password, empTime) => async dispatch => {\n  try {\n    dispatch({\n      type: ActionType.POST_TIME_TODAY_START\n    });\n    const result = await timeAttendanceService.postTimeToday(password, empTime);\n    dispatch({\n      type: ActionType.POST_TIME_TODAY_SUCCESS,\n      payload: result.data\n    });\n    dispatch({\n      type: ActionType.POST_NOTE_TODAY\n    });\n    dispatch({\n      type: ActionType.POST_EXTRATIME_START\n    });\n    dispatch({\n      type: ActionType.POST_EXTRATIME_END\n    });\n  } catch (err) {\n    console.log('postEmployeeTimesDispatch err: ', err);\n    dispatch({\n      type: ActionType.POST_TIME_TODAY_ERROR,\n      payload: err\n    });\n  }\n};","map":{"version":3,"sources":["/Users/auttapongkompiban/Spec_mycos/mycos-makub/src/store/actions/checkIn.ts"],"names":["ActionType","timeAttendanceService","addPasswordDispatch","pass","type","ADD_PASSWORD","payload","addNoteDispatch","note","ADD_NOTE","resetPasswordDispatch","RESET_PASSWORD","deletePasswordDispatch","DELETE_PASSWORD","resetNoteandExtratimeDispatch","RESET_NOTE_AND_EXTRATIME","getEmployeeTimesDispatch","dispatch","GET_EMPLOYEES_TIME_TODAY_START","result","getTimeOfEmpsToday","GET_EMPLOYEES_TIME_TODAY_SUCCESS","data","GET_NOTE_TODAY","GET_EXTRATIME_START","GET_EXTRATIME_END","err","console","log","GET_EMPLOYEES_TIME_TODAY_ERROR","postTimeDispatch","password","empTime","POST_TIME_TODAY_START","postTimeToday","POST_TIME_TODAY_SUCCESS","POST_NOTE_TODAY","POST_EXTRATIME_START","POST_EXTRATIME_END","POST_TIME_TODAY_ERROR"],"mappings":"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","sourcesContent":["import ActionType from \"../../types/constant\"\nimport ITimeToday from \"../../types/ITimeToday\"\nimport timeAttendanceService from '../services/timeAttendanceService'\n\nexport const addPasswordDispatch = (pass: string) => {\n    return {\n        type: ActionType.ADD_PASSWORD,\n        payload: pass\n    }\n}\nexport const addNoteDispatch = (note: string) =>{\n   return{\n        type: ActionType.ADD_NOTE,\n   }\n}\n\nexport const resetPasswordDispatch = () => {\n    return {\n        type: ActionType.RESET_PASSWORD\n    }\n}\nexport const deletePasswordDispatch  = () => {\n    return {\n        type: ActionType.DELETE_PASSWORD\n    }\n}\nexport const resetNoteandExtratimeDispatch = () =>{\n    return {\n        type: ActionType.RESET_NOTE_AND_EXTRATIME\n    }\n}\n\nexport const getEmployeeTimesDispatch = () => async (dispatch: any) => {\n    try {\n        dispatch(({\n            type: ActionType.GET_EMPLOYEES_TIME_TODAY_START\n        }))\n        const result = await timeAttendanceService.getTimeOfEmpsToday()\n        dispatch(({\n            type: ActionType.GET_EMPLOYEES_TIME_TODAY_SUCCESS,\n            payload: result.data\n        }))\n        dispatch(({\n            type: ActionType.GET_NOTE_TODAY\n        }))\n        dispatch(({\n            type: ActionType.GET_EXTRATIME_START\n        }))\n        dispatch(({\n            type: ActionType.GET_EXTRATIME_END\n        }))\n    } catch (err) {\n        console.log('getEmployeeTimesDispatch err: ', err)\n        dispatch(({\n            type: ActionType.GET_EMPLOYEES_TIME_TODAY_ERROR,\n            payload: err\n        }))\n    }\n}\n\nexport const postTimeDispatch = (password: string, empTime?: ITimeToday,) => async (dispatch: any) => {\n    try {\n        dispatch(({\n            type: ActionType.POST_TIME_TODAY_START\n        }))\n        const result = await timeAttendanceService.postTimeToday(password, empTime,)\n        dispatch(({\n            type: ActionType.POST_TIME_TODAY_SUCCESS,\n            payload: result.data\n        }))\n        dispatch(({\n            type : ActionType.POST_NOTE_TODAY\n        }))\n        dispatch(({\n            type : ActionType.POST_EXTRATIME_START\n        }))\n        dispatch(({\n            type : ActionType.POST_EXTRATIME_END\n        }))\n    } catch (err) {\n        console.log('postEmployeeTimesDispatch err: ', err)\n        dispatch(({\n            type: ActionType.POST_TIME_TODAY_ERROR,\n            payload: err\n        }))\n    }\n}"]},"metadata":{},"sourceType":"module"}