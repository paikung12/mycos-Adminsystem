{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/auttapongkompiban/Spec_mycos/mycos-makub/src/components/ShowDateTime.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\n\nconst currDate = () => {\n  _s();\n\n  let date = new Date();\n  const [dateTime, setDateTime] = React.useState({\n    curTime: date.toLocaleDateString(),\n    timeStr: date.toLocaleTimeString().replace(/:\\d{2}\\s/, \" \"),\n    curDay: date.toLocaleDateString(\"en-US\", {\n      weekday: \"short\"\n    })\n  });\n  React.useEffect(() => {\n    const interval = setInterval(() => {\n      const date = new Date();\n      setDateTime({\n        curTime: date.toLocaleDateString(),\n        timeStr: date.toLocaleTimeString().replace(/:\\d{2}\\s/, \" \"),\n        curDay: date.toLocaleDateString(\"en-US\", {\n          weekday: \"short\"\n        })\n      });\n      console.log(dateTime);\n    }, 60000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n  const {\n    curTime,\n    timeStr,\n    curDay\n  } = dateTime;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"CurTime: \", curTime]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"TimeStr: \", timeStr]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"CurDay: \", curDay]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 12\n  }, this);\n};\n\n_s(currDate, \"Jyym3oqawaSgiMFuOrh4NwfoaBI=\");\n\nclass ShowDateTime extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      date: new Date()\n    };\n  }\n\n  callMe() {\n    setInterval(() => {\n      this.setState({\n        date: new Date()\n      });\n    }, 1000);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center \",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabular-nums rounded-full px-4 text-xs mr-2 py-1 mt-5 text-xl \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-yellow-300 text-gray-700 font-semibold py-2 px-4 rounded inline-flex items-center\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), this.callMe()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default currDate;","map":{"version":3,"sources":["/Users/auttapongkompiban/Spec_mycos/mycos-makub/src/components/ShowDateTime.tsx"],"names":["React","Component","currDate","date","Date","dateTime","setDateTime","useState","curTime","toLocaleDateString","timeStr","toLocaleTimeString","replace","curDay","weekday","useEffect","interval","setInterval","console","log","clearInterval","ShowDateTime","state","callMe","setState","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAoD,OAApD;;AAIA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,MAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACI,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,KAAK,CAACO,QAAN,CAAe;AAAEC,IAAAA,OAAO,EAAEL,IAAI,CAACM,kBAAL,EAAX;AAC3CC,IAAAA,OAAO,EAAEP,IAAI,CAACQ,kBAAL,GAA0BC,OAA1B,CAAkC,UAAlC,EAA8C,GAA9C,CADkC;AAE3CC,IAAAA,MAAM,EAAEV,IAAI,CAACM,kBAAL,CAAwB,OAAxB,EAAiC;AAAEK,MAAAA,OAAO,EAAE;AAAX,KAAjC;AAFmC,GAAf,CAAhC;AAKAd,EAAAA,KAAK,CAACe,SAAN,CAAgB,MAAM;AAElB,UAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC/B,YAAMd,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACAE,MAAAA,WAAW,CAAC;AACRE,QAAAA,OAAO,EAAEL,IAAI,CAACM,kBAAL,EADD;AAERC,QAAAA,OAAO,EAAEP,IAAI,CAACQ,kBAAL,GAA0BC,OAA1B,CAAkC,UAAlC,EAA8C,GAA9C,CAFD;AAGRC,QAAAA,MAAM,EAAEV,IAAI,CAACM,kBAAL,CAAwB,OAAxB,EAAiC;AAAEK,UAAAA,OAAO,EAAE;AAAX,SAAjC;AAHA,OAAD,CAAX;AAKAI,MAAAA,OAAO,CAACC,GAAR,CAAYd,QAAZ;AACC,KARuB,EASxB,KATwB,CAA5B;AAWA,WAAO,MAAM;AAAEe,MAAAA,aAAa,CAACJ,QAAD,CAAb;AAAwB,KAAvC;AACH,GAdD,EAcG,EAdH;AAeA,QAAM;AAACR,IAAAA,OAAD;AAAUE,IAAAA,OAAV;AAAmBG,IAAAA;AAAnB,MAA6BR,QAAnC;AACA,sBACG;AAAA,4BACC;AAAA,8BAAeG,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,8BAAeE,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAA,6BAAcG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAQP,CAhCD;;GAAMX,Q;;AAkCN,MAAMmB,YAAN,SAA2BpB,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAGjCqB,KAHiC,GAGzB;AACJnB,MAAAA,IAAI,EAAE,IAAIC,IAAJ;AADF,KAHyB;AAAA;;AAMjCmB,EAAAA,MAAM,GAAG;AACLN,IAAAA,WAAW,CAAC,MAAM;AACd,WAAKO,QAAL,CAAc;AAAErB,QAAAA,IAAI,EAAE,IAAIC,IAAJ;AAAR,OAAd;AACH,KAFU,EAER,IAFQ,CAAX;AAIH;;AAGDqB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,gEAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,EAMK,KAAKF,MAAL,EANL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AA1BgC;;AA6BrC,eAAerB,QAAf","sourcesContent":["import React, { Component,useState,useEffect } from 'react'\nimport Moment from 'react-moment';\n\n\nconst currDate = () => {\n    \n    let date = new Date();\n        const [dateTime, setDateTime] = React.useState({ curTime: date.toLocaleDateString(),\n            timeStr: date.toLocaleTimeString().replace(/:\\d{2}\\s/, \" \"),\n            curDay: date.toLocaleDateString(\"en-US\", { weekday: \"short\" })  \n        });  \n    \n        React.useEffect(() => {  \n        \n            const interval = setInterval(() => {\n                const date = new Date();\n                setDateTime({\n                    curTime: date.toLocaleDateString(),\n                    timeStr: date.toLocaleTimeString().replace(/:\\d{2}\\s/, \" \"),\n                    curDay: date.toLocaleDateString(\"en-US\", { weekday: \"short\" })\n                });\n                console.log(dateTime);\n                },\n                60000\n              );\n            return () => { clearInterval(interval)}\n        }, [])\n        const {curTime, timeStr, curDay} = dateTime;\n        return (\n           <div>\n            <div>CurTime: {curTime}</div>\n            <div>TimeStr: {timeStr}</div>\n            <div>CurDay: {curDay}</div>\n           </div>\n        )\n    \n}\n\nclass ShowDateTime extends Component {\n    \n    \n    state = {\n        date: new Date(),\n    }\n    callMe() {\n        setInterval(() => {\n            this.setState({ date: new Date() });\n        }, 1000);\n\n    }\n   \n    \n    render() {\n        return (\n            <div className=\"flex justify-center \">\n                <div className=\"tabular-nums rounded-full px-4 text-xs mr-2 py-1 mt-5 text-xl \">\n                    <div className=\"bg-yellow-300 text-gray-700 font-semibold py-2 px-4 rounded inline-flex items-center\">\n                        \n                    </div>\n                </div>\n                {this.callMe()}\n            </div>\n\n        );\n    }\n}\n\nexport default currDate;"]},"metadata":{},"sourceType":"module"}