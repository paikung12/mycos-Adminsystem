{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/auttapongkompiban/Spec_mycos/mycos-makub/src/components/Dashboard/TableTimetoday.tsx\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport useCheckInAction from '../../hooks/useCheckInAction';\nimport Moment from 'react-moment';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport { TablePagination } from \"@material-ui/core\";\nimport classNames from 'classnames';\nconst EMP_TIME_TODAY_ID = 'emp-time-today-';\n\nfunction empsTodayByCheckInSelector(state) {\n  const todayEmps = state.checkIn.todayEmps || [];\n  return todayEmps.sort((a, b) => {\n    if (a.checkIn && b.checkIn) {\n      if (a.checkIn < b.checkIn) return -1;\n    }\n\n    return 0;\n  });\n}\n\nconst LayoutDashboard = styled.div`\n  flex: 7 1 0%;\n  background-color: rgba(255,214,107,1);\n  display: flex;\n  flex-direction: column;\n \n`;\n_c = LayoutDashboard;\n\nfunction TableTime() {\n  _s();\n\n  const {\n    getTimeOfEmpsToday\n  } = useCheckInAction();\n  const emps = useSelector(empsTodayByCheckInSelector);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(11);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const latestEmpCheckIn = useSelector(state => state.checkIn.latest);\n  useEffect(() => {\n    getTimeOfEmpsToday();\n  }, [getTimeOfEmpsToday]);\n  console.log(\"emps emps:\", emps);\n  useEffect(() => {\n    if (latestEmpCheckIn) {\n      const curEle = document.getElementById(`${EMP_TIME_TODAY_ID}${latestEmpCheckIn.employeeId}`);\n\n      if (curEle) {\n        curEle.scrollIntoView();\n      }\n    }\n  }, [latestEmpCheckIn]);\n  return /*#__PURE__*/_jsxDEV(LayoutDashboard, {\n    className: \"h-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"md:px-10 mt-0.25 py-8 w-full \",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shadow overflow-hidden rounded border-b border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: \"min-w-full bg-white\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"bg-gray-800 text-white \",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-left py-3 px-4 uppercase font-semibold text-sm\",\n                children: \"No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-left py-3 px-4 uppercase font-semibold text-sm\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-left py-3 px-4 uppercase font-semibold text-sm\",\n                children: \" Check-In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-left py-3 px-4 uppercase font-semibold text-sm\",\n                children: \"Check-Out\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-left py-3 px-4 uppercase font-semibold text-sm\",\n                children: \"#Note\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"text-gray-700  \",\n            children: [emps.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((items, index) => {\n              var _items$employeeId;\n\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                tabIndex: -1,\n                id: `${EMP_TIME_TODAY_ID}${(_items$employeeId = items.employeeId) === null || _items$employeeId === void 0 ? void 0 : _items$employeeId.toString()}`,\n                className: classNames({\n                  \"selected-row\": items.employeeId === (latestEmpCheckIn === null || latestEmpCheckIn === void 0 ? void 0 : latestEmpCheckIn.employeeId)\n                }),\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  className: \" text-left py-3 px-4\",\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: \" text-left py-3 px-4\",\n                  children: items.nickName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: \"text-left py-3 px-4\",\n                  children: /*#__PURE__*/_jsxDEV(Moment, {\n                    format: \"LT\\t\",\n                    children: items.checkIn\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 84\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: \"text-left py-3 px-4\",\n                  children: /*#__PURE__*/_jsxDEV(Moment, {\n                    format: \"LT\",\n                    children: items.checkOut\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 84\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: \"text-left py-3 px-4\",\n                  children: items.note\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 41\n                }, this)]\n              }, items.employeeId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 41\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 5,\n                className: \"text-center\",\n                children: 'no employee today'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 39\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 37\n            }, this), \"}\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [11],\n        component: \"div\",\n        count: emps.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onChangePage: handleChangePage,\n        onChangeRowsPerPage: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TableTime, \"jPhobghyJyMEmL1K9KNmcraD2s4=\", false, function () {\n  return [useCheckInAction, useSelector, useSelector];\n});\n\n_c2 = TableTime;\nexport default TableTime;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LayoutDashboard\");\n$RefreshReg$(_c2, \"TableTime\");","map":{"version":3,"sources":["/Users/auttapongkompiban/Spec_mycos/mycos-makub/src/components/Dashboard/TableTimetoday.tsx"],"names":["styled","React","useEffect","useSelector","useCheckInAction","Moment","Table","TableCell","TablePagination","classNames","EMP_TIME_TODAY_ID","empsTodayByCheckInSelector","state","todayEmps","checkIn","sort","a","b","LayoutDashboard","div","TableTime","getTimeOfEmpsToday","emps","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","latestEmpCheckIn","latest","console","log","curEle","document","getElementById","employeeId","scrollIntoView","slice","map","items","index","toString","nickName","checkOut","note","length"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\nimport React,{useEffect} from 'react'\nimport { useSelector} from 'react-redux'\nimport useCheckInAction from '../../hooks/useCheckInAction'\nimport {RootState} from '../../store/reducers'\nimport Moment from 'react-moment';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport { TablePagination } from \"@material-ui/core\";\nimport ITimeToday from \"../../types/ITimeToday\";\nimport classNames from 'classnames'\n\n\nconst EMP_TIME_TODAY_ID = 'emp-time-today-'\nfunction empsTodayByCheckInSelector(state: RootState) {\n\n  const todayEmps = state.checkIn.todayEmps || []\n  return todayEmps.sort((a: ITimeToday, b: ITimeToday) => {\n    if (a.checkIn && b.checkIn) {\n      if (a.checkIn < b.checkIn)\n        return -1\n    }\n    return 0\n  })\n}\n\nconst LayoutDashboard = styled.div`\n  flex: 7 1 0%;\n  background-color: rgba(255,214,107,1);\n  display: flex;\n  flex-direction: column;\n \n`;\nfunction TableTime() {\n\n    const {getTimeOfEmpsToday} = useCheckInAction()\n    const emps = useSelector(empsTodayByCheckInSelector)\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(11);\n\n\n    const handleChangePage = (event: unknown, newPage: number) => {\n      setPage(newPage);\n    };\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setRowsPerPage(+event.target.value);\n      setPage(0);\n    };\n    const latestEmpCheckIn = useSelector((state: RootState) => state.checkIn.latest)\n\n    useEffect(() => {\n        getTimeOfEmpsToday();\n    }, [getTimeOfEmpsToday])\n    console.log(\"emps emps:\", emps)\n\n    useEffect(() => {\n      if (latestEmpCheckIn) {\n        const curEle = document.getElementById(`${EMP_TIME_TODAY_ID}${latestEmpCheckIn.employeeId}`)\n        if (curEle){\n          curEle.scrollIntoView()\n        }\n      }\n    }, [latestEmpCheckIn])\n\n\n      return (\n        <LayoutDashboard className=\"h-screen\">\n          <div className=\"md:px-10 mt-0.25 py-8 w-full \">\n                    <div className=\"shadow overflow-hidden rounded border-b border-gray-200\">\n                        <Table className=\"min-w-full bg-white\">\n                                <thead className=\"bg-gray-800 text-white \">\n                                <tr>\n                                    <th className=\"text-left py-3 px-4 uppercase font-semibold text-sm\">No</th>\n                                    <th className=\"text-left py-3 px-4 uppercase font-semibold text-sm\">Name</th>\n                                    <th className=\"text-left py-3 px-4 uppercase font-semibold text-sm\"> Check-In</th>\n                                    <th className=\"text-left py-3 px-4 uppercase font-semibold text-sm\">Check-Out</th>\n                                    <th className=\"text-left py-3 px-4 uppercase font-semibold text-sm\">#Note</th>\n                                </tr>\n                                </thead>\n                            <tbody className=\"text-gray-700  \">\n                              {emps.slice(page* rowsPerPage,page * rowsPerPage + rowsPerPage).map((items : any , index :any) => {\n                                return (\n                                        <tr  tabIndex={-1} \n                                             key={items.employeeId}\n                                             id={`${EMP_TIME_TODAY_ID}${items.employeeId?.toString()}`}\n                                             className={classNames({\"selected-row\": items.employeeId === latestEmpCheckIn?.employeeId})}                            \n                                             >\n                                        <TableCell className=\" text-left py-3 px-4\">{index+1}</TableCell> \n                                        <TableCell className=\" text-left py-3 px-4\">{items.nickName}</TableCell>\n                                        <TableCell className=\"text-left py-3 px-4\"><Moment format=\"LT\t\">{items.checkIn}</Moment></TableCell>\n                                        <TableCell className=\"text-left py-3 px-4\"><Moment format=\"LT\">{items.checkOut}</Moment></TableCell>\n                                        <TableCell className=\"text-left py-3 px-4\">{items.note}</TableCell>\n                                        </tr>\n                                      );\n                                    })}\n                                    <tr>\n                                      <TableCell colSpan={5} className=\"text-center\">{'no employee today'}</TableCell>\n                                    </tr>}\n                            </tbody>\n                        </Table>\n                    </div>\n                    <TablePagination\n                        rowsPerPageOptions={[11]}\n                        component=\"div\"\n                        count={emps.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onChangePage={handleChangePage}\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\n                    />\n                </div>\n        </LayoutDashboard>\n        )\n    }\nexport default TableTime\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}