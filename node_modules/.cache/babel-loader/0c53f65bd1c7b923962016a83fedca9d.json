{"ast":null,"code":"import ActionType from \"../../types/constant\";\nconst initialState = {\n  password: '',\n  note: '',\n  todayEmps: [],\n  loading: false,\n  error: '',\n  completed: false\n};\n\nfunction CheckInReducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionType.ADD_PASSWORD:\n      const curPass = state.password;\n      return { ...state,\n        password: curPass + action.payload\n      };\n\n    case ActionType.RESET_PASSWORD:\n      return { ...state,\n        password: ''\n      };\n\n    case ActionType.GET_EMPLOYEES_TIME_TODAY_START:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case ActionType.GET_EMPLOYEES_TIME_TODAY_SUCCESS:\n      {\n        return { ...state,\n          loading: false,\n          todayEmps: action.payload,\n          error: ''\n        };\n      }\n\n    case ActionType.GET_EMPLOYEES_TIME_TODAY_ERROR:\n      {\n        return { ...state,\n          loading: false,\n          error: action.payload\n        };\n      }\n\n    case ActionType.POST_TIME_TODAY_START:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case ActionType.POST_TIME_TODAY_SUCCESS:\n      {\n        const payload = action.payload;\n        const remainEmps = state.todayEmps.filter(t => t.employeeId !== payload.employeeId);\n        return { ...state,\n          todayEmps: [...remainEmps, payload],\n          loading: false\n        };\n      }\n\n    case ActionType.POST_TIME_TODAY_ERROR:\n      {\n        return { ...state,\n          loading: false,\n          error: action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n}\n\n_c = CheckInReducer;\nexport default CheckInReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckInReducer\");","map":{"version":3,"sources":["/Users/auttapongkompiban/Spec_mycos/mycos-makub/src/store/reducers/checkInReducer.ts"],"names":["ActionType","initialState","password","note","todayEmps","loading","error","completed","CheckInReducer","state","action","type","ADD_PASSWORD","curPass","payload","RESET_PASSWORD","GET_EMPLOYEES_TIME_TODAY_START","GET_EMPLOYEES_TIME_TODAY_SUCCESS","GET_EMPLOYEES_TIME_TODAY_ERROR","POST_TIME_TODAY_START","POST_TIME_TODAY_SUCCESS","remainEmps","filter","t","employeeId","POST_TIME_TODAY_ERROR"],"mappings":"AAAA,OAAOA,UAAP,MAAoC,sBAApC;AAYA,MAAMC,YAAiC,GAAG;AACtCC,EAAAA,QAAQ,EAAE,EAD4B;AAEtCC,EAAAA,IAAI,EAAE,EAFgC;AAGtCC,EAAAA,SAAS,EAAE,EAH2B;AAItCC,EAAAA,OAAO,EAAE,KAJ6B;AAKtCC,EAAAA,KAAK,EAAE,EAL+B;AAMtCC,EAAAA,SAAS,EAAE;AAN2B,CAA1C;;AASA,SAASC,cAAT,CAAwBC,KAA0B,GAAGR,YAArD,EAAmES,MAAnE,EAAyF;AAErF,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,UAAU,CAACY,YAAhB;AACI,YAAMC,OAAO,GAAGJ,KAAK,CAACP,QAAtB;AACA,aAAO,EACH,GAAGO,KADA;AAEHP,QAAAA,QAAQ,EAAEW,OAAO,GAAGH,MAAM,CAACI;AAFxB,OAAP;;AAIJ,SAAKd,UAAU,CAACe,cAAhB;AACI,aAAO,EACH,GAAGN,KADA;AAEHP,QAAAA,QAAQ,EAAE;AAFP,OAAP;;AAKJ,SAAKF,UAAU,CAACgB,8BAAhB;AAAgD;AAC5C,eAAO,EACH,GAAGP,KADA;AAEHJ,UAAAA,OAAO,EAAE;AAFN,SAAP;AAIH;;AACD,SAAKL,UAAU,CAACiB,gCAAhB;AAAkD;AAC9C,eAAO,EACH,GAAGR,KADA;AAEHJ,UAAAA,OAAO,EAAE,KAFN;AAGHD,UAAAA,SAAS,EAAEM,MAAM,CAACI,OAHf;AAIHR,UAAAA,KAAK,EAAE;AAJJ,SAAP;AAMH;;AACD,SAAKN,UAAU,CAACkB,8BAAhB;AAAgD;AAC5C,eAAO,EACH,GAAGT,KADA;AAEHJ,UAAAA,OAAO,EAAE,KAFN;AAGHC,UAAAA,KAAK,EAAEI,MAAM,CAACI;AAHX,SAAP;AAKH;;AACD,SAAKd,UAAU,CAACmB,qBAAhB;AAAuC;AACnC,eAAO,EACH,GAAGV,KADA;AAEHJ,UAAAA,OAAO,EAAE;AAFN,SAAP;AAIH;;AACD,SAAKL,UAAU,CAACoB,uBAAhB;AAAwC;AACpC,cAAMN,OAAO,GAAGJ,MAAM,CAACI,OAAvB;AACA,cAAMO,UAAU,GAAGZ,KAAK,CAACL,SAAN,CAAgBkB,MAAhB,CAAuBC,CAAC,IAAIA,CAAC,CAACC,UAAF,KAAiBV,OAAO,CAACU,UAArD,CAAnB;AACA,eAAM,EACF,GAAGf,KADD;AAEFL,UAAAA,SAAS,EAAE,CAAC,GAAGiB,UAAJ,EAAgBP,OAAhB,CAFT;AAGFT,UAAAA,OAAO,EAAE;AAHP,SAAN;AAKH;;AACD,SAAKL,UAAU,CAACyB,qBAAhB;AAAsC;AAClC,eAAM,EACF,GAAGhB,KADD;AAEFJ,UAAAA,OAAO,EAAE,KAFP;AAGFC,UAAAA,KAAK,EAAEI,MAAM,CAACI;AAHZ,SAAN;AAKH;;AACD;AAAS,aAAOL,KAAP;AAxDb;AA0DH;;KA5DQD,c;AA8DT,eAAeA,cAAf","sourcesContent":["import ActionType, { IAction } from \"../../types/constant\"\nimport ITimeToday from \"../../types/ITimeToday\"\n\ninterface CheckInReducerState {\n    password: string\n    note: string\n    todayEmps: ITimeToday[]\n    loading: boolean\n    error: string\n    \n}\n\nconst initialState: CheckInReducerState = {\n    password: '',\n    note: '',\n    todayEmps: [],\n    loading: false,\n    error: '',\n    completed: false,\n}\n\nfunction CheckInReducer(state: CheckInReducerState = initialState, action: IAction<any>) {\n\n    switch (action.type) {\n        case ActionType.ADD_PASSWORD:\n            const curPass = state.password\n            return {\n                ...state,\n                password: curPass + action.payload\n            }\n        case ActionType.RESET_PASSWORD:\n            return {\n                ...state,\n                password: ''\n                \n            }\n        case ActionType.GET_EMPLOYEES_TIME_TODAY_START: {\n            return {\n                ...state,\n                loading: true\n            }\n        }\n        case ActionType.GET_EMPLOYEES_TIME_TODAY_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                todayEmps: action.payload,\n                error: ''\n            }\n        }\n        case ActionType.GET_EMPLOYEES_TIME_TODAY_ERROR: {\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n        }\n        case ActionType.POST_TIME_TODAY_START: {\n            return {\n                ...state,\n                loading: true\n            }\n        }\n        case ActionType.POST_TIME_TODAY_SUCCESS:{\n            const payload = action.payload as ITimeToday\n            const remainEmps = state.todayEmps.filter(t => t.employeeId !== payload.employeeId)\n            return{\n                ...state,\n                todayEmps: [...remainEmps, payload],\n                loading: false\n            }\n        }\n        case ActionType.POST_TIME_TODAY_ERROR:{\n            return{\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n        }\n        default: return state\n    }\n}\n\nexport default CheckInReducer"]},"metadata":{},"sourceType":"module"}