{"ast":null,"code":"import { createStore, compose, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from './reducers'; //for async call, API, File Etc\n\nimport thunk from 'redux-thunk';\n\nfunction initStore(replaceState = {}) {\n  const loggerMiddleware = createLogger({\n    collapsed: true\n  }); // for redux-devtool\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const middlewares = [thunk, loggerMiddleware];\n  const enhancer = composeEnhancers(applyMiddleware(...middlewares));\n  const store = createStore(rootReducer, replaceState, enhancer);\n  return store;\n}\n\nexport default initStore;","map":{"version":3,"sources":["/Users/auttapongkompiban/Spec_mycos/mycos-makub-admin/src/store/initStore.ts"],"names":["createStore","compose","applyMiddleware","createLogger","rootReducer","thunk","initStore","replaceState","loggerMiddleware","collapsed","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","middlewares","enhancer","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,SAAQC,YAAR,QAA2B,cAA3B;AACA,OAAOC,WAAP,MAAwB,YAAxB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AACA,SAASC,SAAT,CAAmBC,YAAiB,GAAG,EAAvC,EAA2C;AAEvC,QAAMC,gBAAgB,GAAGL,YAAY,CAAC;AAAEM,IAAAA,SAAS,EAAE;AAAb,GAAD,CAArC,CAFuC,CAIvC;;AACA,QAAMC,gBAAgB,GACjBC,MAAD,CAAgBC,oCAAhB,IAAwDX,OAD5D;AAGA,QAAMY,WAAW,GAAG,CAACR,KAAD,EAAQG,gBAAR,CAApB;AAEA,QAAMM,QAAQ,GAAGJ,gBAAgB,CAC7BR,eAAe,CAAC,GAAGW,WAAJ,CADc,CAAjC;AAIA,QAAME,KAAK,GAAGf,WAAW,CACrBI,WADqB,EAErBG,YAFqB,EAGrBO,QAHqB,CAAzB;AAMA,SAAOC,KAAP;AACH;;AACD,eAAeT,SAAf","sourcesContent":["import { createStore, compose, applyMiddleware } from 'redux'\nimport {createLogger} from 'redux-logger'\nimport rootReducer from './reducers'\n//for async call, API, File Etc\nimport thunk from 'redux-thunk'\nfunction initStore(replaceState: any = {}) {\n\n    const loggerMiddleware = createLogger({ collapsed: true })\n\n    // for redux-devtool\n    const composeEnhancers =\n        (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\n    const middlewares = [thunk, loggerMiddleware]\n\n    const enhancer = composeEnhancers(\n        applyMiddleware(...middlewares)\n    )\n\n    const store = createStore(\n        rootReducer,\n        replaceState,\n        enhancer,\n    )\n\n    return store\n}\nexport default initStore"]},"metadata":{},"sourceType":"module"}