{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/auttapongkompiban/Spec_mycos/mycos-makub-admin/src/components/Cards/CardOtherleaves/OtherBarChart.tsx\";\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { Chart, ArgumentAxis, ValueAxis, BarSeries, Title, Legend } from '@devexpress/dx-react-chart-material-ui';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Stack, Animation } from '@devexpress/dx-react-chart';\n\nconst styles = theme => ({\n  paper: {\n    maxWidth: 1000,\n    minWidth: 1000,\n    display: 'inline-block'\n  },\n  table: {\n    maxWidth: 1000\n  }\n});\n\nconst legendStyles = () => ({\n  root: {\n    display: 'flex',\n    margin: 'auto',\n    flexDirection: 'row'\n  }\n});\n\nconst data = [{\n  country: 'Russia',\n  area: 10\n}, {\n  country: 'Canada',\n  area: 7\n}, {\n  country: 'USA',\n  area: 7\n}, {\n  country: 'China',\n  area: 7\n}];\n\nconst legendRootBase = ({\n  classes,\n  ...restProps\n}) => /*#__PURE__*/_jsxDEV(Legend.Root, { ...restProps,\n  className: classes.root\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 39,\n  columnNumber: 3\n}, this);\n\nconst legendLabelStyles = () => ({\n  label: {\n    whiteSpace: 'nowrap'\n  }\n});\n\nconst legendLabelBase = ({\n  classes,\n  ...restProps\n}) => /*#__PURE__*/_jsxDEV(Legend.Label, {\n  className: classes.label,\n  ...restProps\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 47,\n  columnNumber: 3\n}, this);\n\nconst Label = withStyles(legendLabelStyles, {\n  name: 'LegendLabel'\n})(legendLabelBase);\nexport default class Demo extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data\n    };\n  }\n\n  render() {\n    const {\n      data: chartData\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        data: chartData,\n        children: [/*#__PURE__*/_jsxDEV(ArgumentAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ValueAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BarSeries, {\n          name: \"Gold Medals\",\n          valueField: \"gold\",\n          argumentField: \"country\",\n          color: \"#ffd700\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BarSeries, {\n          name: \"Silver Medals\",\n          valueField: \"silver\",\n          argumentField: \"country\",\n          color: \"#c0c0c0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BarSeries, {\n          name: \"Bronze Medals\",\n          valueField: \"bronze\",\n          argumentField: \"country\",\n          color: \"#cd7f32\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Animation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          position: \"bottom\",\n          rootComponent: Root,\n          labelComponent: Label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          text: \"Olimpic Medals in 2008\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/auttapongkompiban/Spec_mycos/mycos-makub-admin/src/components/Cards/CardOtherleaves/OtherBarChart.tsx"],"names":["React","Paper","Chart","ArgumentAxis","ValueAxis","BarSeries","Title","Legend","withStyles","Stack","Animation","styles","theme","paper","maxWidth","minWidth","display","table","legendStyles","root","margin","flexDirection","data","country","area","legendRootBase","classes","restProps","legendLabelStyles","label","whiteSpace","legendLabelBase","Label","name","Demo","PureComponent","constructor","props","state","render","chartData","Root"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport {\n  Chart,\n  ArgumentAxis,\n  ValueAxis,\n  BarSeries,\n  Title,\n  Legend,\n} from '@devexpress/dx-react-chart-material-ui';\nimport { StyleRulesCallback, withStyles } from '@material-ui/core/styles';\nimport { Stack, Animation } from '@devexpress/dx-react-chart';\n\nconst styles: StyleRulesCallback = theme => ({\n  paper: {\n      maxWidth: 1000,\n      minWidth: 1000,\n      display: 'inline-block'\n  },\n  table: {\n      maxWidth: 1000,\n  },\n});\nconst legendStyles = () => ({\n  root: {\n    display: 'flex',\n    margin: 'auto',\n    flexDirection: 'row',\n  },\n});\n\nconst data = [\n  { country: 'Russia', area: 10 },\n  { country: 'Canada', area: 7 },\n  { country: 'USA', area: 7 },\n  { country: 'China', area: 7 },\n];\nconst legendRootBase = ({ classes, ...restProps } : any) => (\n  <Legend.Root {...restProps} className={classes.root} />\n);\nconst legendLabelStyles = () => ({\n  label: {\n    whiteSpace: 'nowrap',\n  },\n});\nconst legendLabelBase = ({ classes, ...restProps } :any) => (\n  <Legend.Label className={classes.label} {...restProps} />\n);\nconst Label = withStyles(legendLabelStyles, { name: 'LegendLabel' })(legendLabelBase);\n\n\nexport default class Demo extends React.PureComponent<{},any> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data,\n    };\n  }\n\n  render() {\n    const { data: chartData } = this.state;\n\n    return (\n      <Paper>\n        <Chart\n          data={chartData}\n        >\n          <ArgumentAxis />\n          <ValueAxis />\n\n          <BarSeries\n            name=\"Gold Medals\"\n            valueField=\"gold\"\n            argumentField=\"country\"\n            color=\"#ffd700\"\n          />\n          <BarSeries\n            name=\"Silver Medals\"\n            valueField=\"silver\"\n            argumentField=\"country\"\n            color=\"#c0c0c0\"\n          />\n          <BarSeries\n            name=\"Bronze Medals\"\n            valueField=\"bronze\"\n            argumentField=\"country\"\n            color=\"#cd7f32\"\n          />\n          <Animation />\n          <Legend position=\"bottom\" rootComponent={Root} labelComponent={Label} />\n          <Title text=\"Olimpic Medals in 2008\" />\n          <Stack />\n        </Chart>\n      </Paper>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}