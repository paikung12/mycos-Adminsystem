{"ast":null,"code":"import ActionType from \"../../types/constant\";\nconst initialState = {\n  password: '',\n  note: '',\n  todayEmps: [],\n  loading: false,\n  error: ''\n};\n\nfunction CheckInReducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionType.ADD_PASSWORD:\n      const curPass = state.password;\n      return { ...state,\n        password: curPass + action.payload\n      };\n\n    case ActionType.ADD_NOTE:\n      const curNote = state.note;\n      return { ...state,\n        note: curNote + action.payload\n      };\n\n    case ActionType.RESET_PASSWORD:\n      return { ...state,\n        password: ''\n      };\n\n    case ActionType.RESET_NOTE_AND_EXTRATIME:\n      return { ...state,\n        note: ''\n      };\n\n    case ActionType.DELETE_PASSWORD:\n      const deletePass = state.password;\n      return { ...state,\n        password: deletePass.substr(0, deletePass.length - 1)\n      };\n\n    case ActionType.GET_EMPLOYEES_TIME_TODAY_START:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case ActionType.GET_EMPLOYEES_TIME_TODAY_SUCCESS:\n      {\n        return { ...state,\n          loading: false,\n          todayEmps: action.payload,\n          error: ''\n        };\n      }\n\n    case ActionType.GET_NOTE_TODAY:\n      {\n        return { ...state,\n          loading: false,\n          error: ''\n        };\n      }\n\n    case ActionType.GET_EMPLOYEES_TIME_TODAY_ERROR:\n      {\n        return { ...state,\n          loading: false,\n          todayEmps: action.payload,\n          error: action.payload\n        };\n      }\n\n    case ActionType.GET_EXTRATIME_START:\n      {\n        return { ...state,\n          loading: false\n        };\n      }\n\n    case ActionType.GET_EXTRATIME_END:\n      {\n        return { ...state,\n          loading: false\n        };\n      }\n\n    case ActionType.POST_TIME_TODAY_START:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case ActionType.POST_TIME_TODAY_SUCCESS:\n      {\n        const payload = action.payload;\n        const remainEmps = state.todayEmps.filter(t => t.employeeId !== payload.employeeId);\n        return { ...state,\n          todayEmps: [...remainEmps, payload],\n          loading: false\n        };\n      }\n\n    case ActionType.POST_NOTE_TODAY:\n      {\n        const note = state.note;\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case ActionType.POST_EXTRATIME_START:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case ActionType.POST_EXTRATIME_END:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case ActionType.POST_TIME_TODAY_ERROR:\n      {\n        return { ...state,\n          loading: false,\n          error: action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n}\n\n_c = CheckInReducer;\nexport default CheckInReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckInReducer\");","map":{"version":3,"sources":["/Users/auttapongkompiban/Spec_mycos/mycos-makub/src/store/reducers/checkInReducer.ts"],"names":["ActionType","initialState","password","note","todayEmps","loading","error","CheckInReducer","state","action","type","ADD_PASSWORD","curPass","payload","ADD_NOTE","curNote","RESET_PASSWORD","RESET_NOTE_AND_EXTRATIME","DELETE_PASSWORD","deletePass","substr","length","GET_EMPLOYEES_TIME_TODAY_START","GET_EMPLOYEES_TIME_TODAY_SUCCESS","GET_NOTE_TODAY","GET_EMPLOYEES_TIME_TODAY_ERROR","GET_EXTRATIME_START","GET_EXTRATIME_END","POST_TIME_TODAY_START","POST_TIME_TODAY_SUCCESS","remainEmps","filter","t","employeeId","POST_NOTE_TODAY","POST_EXTRATIME_START","POST_EXTRATIME_END","POST_TIME_TODAY_ERROR"],"mappings":"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","sourcesContent":["import ActionType, { IAction } from \"../../types/constant\"\nimport ITimeToday from \"../../types/ITimeToday\"\n\ninterface CheckInReducerState {\n    password: string\n    note: string\n    todayEmps: ITimeToday[]\n    loading: boolean\n    error: string\n    \n}\n\nconst initialState: CheckInReducerState = {\n    password: '',\n    note: '',\n    todayEmps: [],\n    loading: false,\n    error: '',\n}\n\n\nfunction CheckInReducer(state: CheckInReducerState = initialState, action: IAction<any>) {\n\n    switch (action.type) {\n        case ActionType.ADD_PASSWORD:\n            const curPass = state.password\n            return {\n                ...state,\n                password: curPass + action.payload\n            }\n        case ActionType.ADD_NOTE:\n            const curNote = state.note\n            return{\n                ...state,\n                note: curNote + action.payload\n            }\n        case ActionType.RESET_PASSWORD:\n            return {\n                ...state,\n                password:''\n                \n            }\n        case ActionType.RESET_NOTE_AND_EXTRATIME:\n            return{\n                ...state,\n                note:''\n            }\n        case ActionType.DELETE_PASSWORD:\n            const deletePass = state.password\n            return{\n                ...state,\n                password : deletePass.substr(0,deletePass.length-1)\n                \n            }    \n        case ActionType.GET_EMPLOYEES_TIME_TODAY_START: {\n            return {\n                ...state,\n                loading: true\n            }\n        }\n        case ActionType.GET_EMPLOYEES_TIME_TODAY_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                todayEmps: action.payload,\n                error: ''\n            }\n        }\n        case ActionType.GET_NOTE_TODAY: {\n           return{\n            ...state,\n            loading: false,\n            error: ''\n           }\n        }\n        case ActionType.GET_EMPLOYEES_TIME_TODAY_ERROR: {\n            return {\n                ...state,\n                loading: false,\n                todayEmps: action.payload,\n                error: action.payload\n            }\n        }\n        case ActionType.GET_EXTRATIME_START: {\n            return{\n                ...state,\n                loading: false,\n            }\n        }\n        case ActionType.GET_EXTRATIME_END: {\n            return{\n                ...state,\n                loading: false,\n            }\n        }\n        case ActionType.POST_TIME_TODAY_START: {\n            return {\n                ...state,\n                loading: true\n            }\n        }\n        case ActionType.POST_TIME_TODAY_SUCCESS:{\n            const payload = action.payload as ITimeToday\n            const remainEmps = state.todayEmps.filter(t => t.employeeId !== payload.employeeId)\n            return{\n                ...state,\n                todayEmps: [...remainEmps, payload],\n                loading: false\n            }\n        }\n        case ActionType.POST_NOTE_TODAY:{\n            const note = state.note\n            return{\n                ...state,\n                loading: true\n            }\n        }\n        case ActionType.POST_EXTRATIME_START:{\n            return{\n                ...state,\n                loading: true\n            }\n        }\n        case ActionType.POST_EXTRATIME_END:{\n            return{\n                ...state,\n                loading: true\n            }\n        }\n\n        case ActionType.POST_TIME_TODAY_ERROR:{\n            return{\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n        }\n        default: return state\n    }\n}\n\nexport default CheckInReducer"]},"metadata":{},"sourceType":"module"}