{"ast":null,"code":"import React, { useMemo } from \"react\";\nimport { withIndex } from \"./hoc/withIndex\";\nimport { useObject } from \"./hooks/useObject\";\nimport { ContextObject as Context } from \"./hooks/useOwnContext\";\nexport var Collection = withIndex(function Collection(_ref) {\n  var children = _ref.children,\n      name = _ref.name,\n      index = _ref.index,\n      object = _ref.object,\n      touched = _ref.touched,\n      value = _ref.value,\n      reducers = _ref.reducers,\n      onValidation = _ref.onValidation,\n      resetSyncErr = _ref.resetSyncErr,\n      validators = _ref.validators,\n      asyncValidator = _ref.asyncValidator,\n      onAsyncValidation = _ref.onAsyncValidation,\n      resetAsyncErr = _ref.resetAsyncErr;\n  var type = object ? \"object\" : \"array\";\n  var props = useObject({\n    name: name,\n    index: index,\n    touched: touched,\n    type: type,\n    value: value,\n    reducers: reducers,\n    onValidation: onValidation,\n    validators: validators,\n    resetSyncErr: resetSyncErr,\n    asyncValidator: asyncValidator,\n    onAsyncValidation: onAsyncValidation,\n    resetAsyncErr: resetAsyncErr\n  });\n  var ctx = useMemo(function () {\n    return props;\n  }, [props.state, props.formStatus]);\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: ctx\n  }, children);\n});","map":{"version":3,"sources":["/Users/auttapongkompiban/Spec_mycos/mycos-makub/node_modules/usetheform/build/es/Collection.js"],"names":["React","useMemo","withIndex","useObject","ContextObject","Context","Collection","_ref","children","name","index","object","touched","value","reducers","onValidation","resetSyncErr","validators","asyncValidator","onAsyncValidation","resetAsyncErr","type","props","ctx","state","formStatus","createElement","Provider"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,aAAa,IAAIC,OAA1B,QAAyC,uBAAzC;AACA,OAAO,IAAIC,UAAU,GAAGJ,SAAS,CAAC,SAASI,UAAT,CAAoBC,IAApB,EAA0B;AAC1D,MAAIC,QAAQ,GAAGD,IAAI,CAACC,QAApB;AAAA,MACIC,IAAI,GAAGF,IAAI,CAACE,IADhB;AAAA,MAEIC,KAAK,GAAGH,IAAI,CAACG,KAFjB;AAAA,MAGIC,MAAM,GAAGJ,IAAI,CAACI,MAHlB;AAAA,MAIIC,OAAO,GAAGL,IAAI,CAACK,OAJnB;AAAA,MAKIC,KAAK,GAAGN,IAAI,CAACM,KALjB;AAAA,MAMIC,QAAQ,GAAGP,IAAI,CAACO,QANpB;AAAA,MAOIC,YAAY,GAAGR,IAAI,CAACQ,YAPxB;AAAA,MAQIC,YAAY,GAAGT,IAAI,CAACS,YARxB;AAAA,MASIC,UAAU,GAAGV,IAAI,CAACU,UATtB;AAAA,MAUIC,cAAc,GAAGX,IAAI,CAACW,cAV1B;AAAA,MAWIC,iBAAiB,GAAGZ,IAAI,CAACY,iBAX7B;AAAA,MAYIC,aAAa,GAAGb,IAAI,CAACa,aAZzB;AAaA,MAAIC,IAAI,GAAGV,MAAM,GAAG,QAAH,GAAc,OAA/B;AACA,MAAIW,KAAK,GAAGnB,SAAS,CAAC;AACpBM,IAAAA,IAAI,EAAEA,IADc;AAEpBC,IAAAA,KAAK,EAAEA,KAFa;AAGpBE,IAAAA,OAAO,EAAEA,OAHW;AAIpBS,IAAAA,IAAI,EAAEA,IAJc;AAKpBR,IAAAA,KAAK,EAAEA,KALa;AAMpBC,IAAAA,QAAQ,EAAEA,QANU;AAOpBC,IAAAA,YAAY,EAAEA,YAPM;AAQpBE,IAAAA,UAAU,EAAEA,UARQ;AASpBD,IAAAA,YAAY,EAAEA,YATM;AAUpBE,IAAAA,cAAc,EAAEA,cAVI;AAWpBC,IAAAA,iBAAiB,EAAEA,iBAXC;AAYpBC,IAAAA,aAAa,EAAEA;AAZK,GAAD,CAArB;AAcA,MAAIG,GAAG,GAAGtB,OAAO,CAAC,YAAY;AAC5B,WAAOqB,KAAP;AACD,GAFgB,EAEd,CAACA,KAAK,CAACE,KAAP,EAAcF,KAAK,CAACG,UAApB,CAFc,CAAjB;AAGA,SAAO,aAAazB,KAAK,CAAC0B,aAAN,CAAoBrB,OAAO,CAACsB,QAA5B,EAAsC;AACxDd,IAAAA,KAAK,EAAEU;AADiD,GAAtC,EAEjBf,QAFiB,CAApB;AAGD,CAnCgC,CAA1B","sourcesContent":["import React, { useMemo } from \"react\";\nimport { withIndex } from \"./hoc/withIndex\";\nimport { useObject } from \"./hooks/useObject\";\nimport { ContextObject as Context } from \"./hooks/useOwnContext\";\nexport var Collection = withIndex(function Collection(_ref) {\n  var children = _ref.children,\n      name = _ref.name,\n      index = _ref.index,\n      object = _ref.object,\n      touched = _ref.touched,\n      value = _ref.value,\n      reducers = _ref.reducers,\n      onValidation = _ref.onValidation,\n      resetSyncErr = _ref.resetSyncErr,\n      validators = _ref.validators,\n      asyncValidator = _ref.asyncValidator,\n      onAsyncValidation = _ref.onAsyncValidation,\n      resetAsyncErr = _ref.resetAsyncErr;\n  var type = object ? \"object\" : \"array\";\n  var props = useObject({\n    name: name,\n    index: index,\n    touched: touched,\n    type: type,\n    value: value,\n    reducers: reducers,\n    onValidation: onValidation,\n    validators: validators,\n    resetSyncErr: resetSyncErr,\n    asyncValidator: asyncValidator,\n    onAsyncValidation: onAsyncValidation,\n    resetAsyncErr: resetAsyncErr\n  });\n  var ctx = useMemo(function () {\n    return props;\n  }, [props.state, props.formStatus]);\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: ctx\n  }, children);\n});"]},"metadata":{},"sourceType":"module"}