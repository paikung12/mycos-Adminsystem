{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/auttapongkompiban/Spec_mycos/mycos-makub/src/components/Dashboard/TableTime.tsx\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport useCheckInAction from '../../hooks/useCheckInAction';\nimport { Table, TableCell, TableContainer, TableHead, TableRow } from \"@material-ui/core\";\nimport ShowMomentTime from \"./ShowMomentTime\";\nimport classNames from 'classnames';\nconst EMP_TIME_TODAY_ID = 'emp-time-today-';\n\nfunction empsTodayByCheckInSelector(state) {\n  const todayEmps = state.checkIn.todayEmps || [];\n  return todayEmps.sort((a, b) => {\n    if (a.checkIn && b.checkIn) {\n      if (a.checkIn < b.checkIn) return -1;\n    }\n\n    return 0;\n  });\n}\n\nconst LayoutDashboard = styled.div`\n  flex: 7 1 0%;\n  background-color: rgba(255,214,107,1);\n  display: flex;\n  \n  .table-container {\n    max-height: 91vh;\n    scroll-behavior: smooth;\n  }\n  flex-direction: column;\n  .selected-row {\n    background-color: #F0F0F0;\n  }\n \n`;\n_c = LayoutDashboard;\n\nfunction TableTime() {\n  _s();\n\n  const {\n    getTimeOfEmpsToday\n  } = useCheckInAction();\n  const emps = useSelector(empsTodayByCheckInSelector);\n  const latestEmpCheckIn = useSelector(state => state.checkIn.latest);\n  useEffect(() => {\n    getTimeOfEmpsToday();\n  }, [getTimeOfEmpsToday]);\n  useEffect(() => {\n    if (latestEmpCheckIn) {\n      const curEle = document.getElementById(`${EMP_TIME_TODAY_ID}${latestEmpCheckIn.employeeId}`);\n\n      if (curEle) {\n        curEle.scrollIntoView();\n      }\n    }\n  }, [latestEmpCheckIn]);\n  return /*#__PURE__*/_jsxDEV(LayoutDashboard, {\n    className: \"h-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"md:px-10 mt-2 py-8 w-full \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shadow overflow-hidden rounded border-b border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          className: \"table-container\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            stickyHeader: true,\n            className: \" bg-white\",\n            \"aria-label\": \"sticky table\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                className: \"bg-gray-800 text-white \",\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  className: \"text-left py-3 px-4 uppercase font-semibold text-sm\",\n                  children: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: \"text-left py-3 px-4 uppercase font-semibold text-sm\",\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: \"text-left py-3 px-4 uppercase font-semibold text-sm\",\n                  children: \" Check-In\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: \"text-left py-3 px-4 uppercase font-semibold text-sm\",\n                  children: \"Check-Out\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: \"text-left py-3 px-4 uppercase font-semibold text-sm\",\n                  children: \"#Note\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              className: \"text-gray-700  \",\n              children: emps.length > 0 ? emps.map((emp, index) => {\n                var _emp$employeeId;\n\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  id: `${EMP_TIME_TODAY_ID}${(_emp$employeeId = emp.employeeId) === null || _emp$employeeId === void 0 ? void 0 : _emp$employeeId.toString()}`,\n                  className: classNames({\n                    \"selected-row\": emp.employeeId === (latestEmpCheckIn === null || latestEmpCheckIn === void 0 ? void 0 : latestEmpCheckIn.employeeId)\n                  }),\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    className: \"text-left py-3 px-4\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    className: \"text-left py-3 px-4\",\n                    children: emp.nickName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    className: \"text-left py-3 px-4\",\n                    children: /*#__PURE__*/_jsxDEV(ShowMomentTime, {\n                      time: emp.checkIn\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 66\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    className: \"text-left py-3 px-4\",\n                    children: /*#__PURE__*/_jsxDEV(ShowMomentTime, {\n                      time: emp.checkOut\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 86,\n                      columnNumber: 66\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    className: \"text-left py-3 px-4\",\n                    children: emp.note\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 23\n                  }, this)]\n                }, emp.employeeId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 21\n                }, this);\n              }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(TableCell, {\n                  colSpan: 5,\n                  className: \"text-center\",\n                  children: 'no employee today'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 22\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TableTime, \"7Jfx39vZ8DMe55wfCAZ/lwTQ+Z8=\", false, function () {\n  return [useCheckInAction, useSelector, useSelector];\n});\n\n_c2 = TableTime;\nexport default TableTime;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LayoutDashboard\");\n$RefreshReg$(_c2, \"TableTime\");","map":{"version":3,"sources":["/Users/auttapongkompiban/Spec_mycos/mycos-makub/src/components/Dashboard/TableTime.tsx"],"names":["styled","React","useEffect","useSelector","useCheckInAction","Table","TableCell","TableContainer","TableHead","TableRow","ShowMomentTime","classNames","EMP_TIME_TODAY_ID","empsTodayByCheckInSelector","state","todayEmps","checkIn","sort","a","b","LayoutDashboard","div","TableTime","getTimeOfEmpsToday","emps","latestEmpCheckIn","latest","curEle","document","getElementById","employeeId","scrollIntoView","length","map","emp","index","toString","nickName","checkOut","note"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AAEA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,cAA3B,EAA2CC,SAA3C,EAAsDC,QAAtD,QAAsE,mBAAtE;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,MAAMC,iBAAiB,GAAG,iBAA1B;;AACA,SAASC,0BAAT,CAAoCC,KAApC,EAAsD;AAEpD,QAAMC,SAAS,GAAGD,KAAK,CAACE,OAAN,CAAcD,SAAd,IAA2B,EAA7C;AACA,SAAOA,SAAS,CAACE,IAAV,CAAe,CAACC,CAAD,EAAgBC,CAAhB,KAAkC;AACtD,QAAID,CAAC,CAACF,OAAF,IAAaG,CAAC,CAACH,OAAnB,EAA4B;AAC1B,UAAIE,CAAC,CAACF,OAAF,GAAYG,CAAC,CAACH,OAAlB,EACE,OAAO,CAAC,CAAR;AACH;;AACD,WAAO,CAAP;AACD,GANM,CAAP;AAOD;;AACD,MAAMI,eAAe,GAAGpB,MAAM,CAACqB,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;KAAMD,e;;AAeN,SAASE,SAAT,GAAqB;AAAA;;AAEnB,QAAM;AAAEC,IAAAA;AAAF,MAAyBnB,gBAAgB,EAA/C;AACA,QAAMoB,IAAI,GAAGrB,WAAW,CAACU,0BAAD,CAAxB;AAEA,QAAMY,gBAAgB,GAAGtB,WAAW,CAAEW,KAAD,IAAsBA,KAAK,CAACE,OAAN,CAAcU,MAArC,CAApC;AAGAxB,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,kBAAkB;AACnB,GAFQ,EAEN,CAACA,kBAAD,CAFM,CAAT;AAIArB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIuB,gBAAJ,EAAsB;AACpB,YAAME,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAyB,GAAEjB,iBAAkB,GAAEa,gBAAgB,CAACK,UAAW,EAA3E,CAAf;;AACA,UAAIH,MAAJ,EAAW;AACTA,QAAAA,MAAM,CAACI,cAAP;AACD;AACF;AACF,GAPQ,EAON,CAACN,gBAAD,CAPM,CAAT;AASA,sBACE,QAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,UAA3B;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,yDAAf;AAAA,+BACE,QAAC,cAAD;AAAgB,UAAA,SAAS,EAAC,iBAA1B;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,YAAY,MAAnB;AAAoB,YAAA,SAAS,EAAC,WAA9B;AAA0C,0BAAW,cAArD;AAAA,oCAEE,QAAC,SAAD;AAAA,qCACE,QAAC,QAAD;AAAU,gBAAA,SAAS,EAAC,yBAApB;AAAA,wCACE,QAAC,SAAD;AAAW,kBAAA,SAAS,EAAC,qDAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,SAAD;AAAW,kBAAA,SAAS,EAAC,qDAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE,QAAC,SAAD;AAAW,kBAAA,SAAS,EAAC,qDAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,eAIE,QAAC,SAAD;AAAW,kBAAA,SAAS,EAAC,qDAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,eAKE,QAAC,SAAD;AAAW,kBAAA,SAAS,EAAC,qDAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFF,eAWE;AAAO,cAAA,SAAS,EAAC,iBAAjB;AAAA,wBACGD,IAAI,CAACQ,MAAL,GAAc,CAAd,GAAkBR,IAAI,CAACS,GAAL,CAAS,CAACC,GAAD,EAAkBC,KAAlB,KAAoC;AAAA;;AAC9D,oCACE;AAEE,kBAAA,EAAE,EAAG,GAAEvB,iBAAkB,GAArB,mBAAuBsB,GAAG,CAACJ,UAA3B,oDAAuB,gBAAgBM,QAAhB,EAA2B,EAFxD;AAGE,kBAAA,SAAS,EAAEzB,UAAU,CAAC;AAAC,oCAAgBuB,GAAG,CAACJ,UAAJ,MAAmBL,gBAAnB,aAAmBA,gBAAnB,uBAAmBA,gBAAgB,CAAEK,UAArC;AAAjB,mBAAD,CAHvB;AAAA,0CAKE,QAAC,SAAD;AAAW,oBAAA,SAAS,EAAC,qBAArB;AAAA,8BAA4CK,KAAK,GAAG;AAApD;AAAA;AAAA;AAAA;AAAA,0BALF,eAME,QAAC,SAAD;AAAW,oBAAA,SAAS,EAAC,qBAArB;AAAA,8BAA4CD,GAAG,CAACG;AAAhD;AAAA;AAAA;AAAA;AAAA,0BANF,eAOE,QAAC,SAAD;AAAW,oBAAA,SAAS,EAAC,qBAArB;AAAA,2CAA2C,QAAC,cAAD;AAAgB,sBAAA,IAAI,EAAEH,GAAG,CAAClB;AAA1B;AAAA;AAAA;AAAA;AAAA;AAA3C;AAAA;AAAA;AAAA;AAAA,0BAPF,eAQE,QAAC,SAAD;AAAW,oBAAA,SAAS,EAAC,qBAArB;AAAA,2CAA2C,QAAC,cAAD;AAAgB,sBAAA,IAAI,EAAEkB,GAAG,CAACI;AAA1B;AAAA;AAAA;AAAA;AAAA;AAA3C;AAAA;AAAA;AAAA;AAAA,0BARF,eASE,QAAC,SAAD;AAAW,oBAAA,SAAS,EAAC,qBAArB;AAAA,8BAA4CJ,GAAG,CAACK;AAAhD;AAAA;AAAA;AAAA;AAAA,0BATF;AAAA,mBACOL,GAAG,CAACJ,UADX;AAAA;AAAA;AAAA;AAAA,wBADF;AAaD,eAdkB,CAAlB,gBAcI;AAAA,uCACC,QAAC,SAAD;AAAW,kBAAA,OAAO,EAAE,CAApB;AAAuB,kBAAA,SAAS,EAAC,aAAjC;AAAA,4BAAgD;AAAhD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAfP;AAAA;AAAA;AAAA;AAAA,oBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD;;GA9DQR,S;UAEwBlB,gB,EAClBD,W,EAEYA,W;;;MALlBmB,S;AA+DT,eAAeA,SAAf","sourcesContent":["import styled from \"styled-components\";\nimport React, { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport useCheckInAction from '../../hooks/useCheckInAction'\nimport { RootState } from '../../store/reducers'\nimport { Table, TableCell, TableContainer, TableHead, TableRow } from \"@material-ui/core\";\nimport ITimeToday from \"../../types/ITimeToday\";\nimport ShowMomentTime from \"./ShowMomentTime\";\nimport classNames from 'classnames'\n\nconst EMP_TIME_TODAY_ID = 'emp-time-today-'\nfunction empsTodayByCheckInSelector(state: RootState) {\n\n  const todayEmps = state.checkIn.todayEmps || []\n  return todayEmps.sort((a: ITimeToday, b: ITimeToday) => {\n    if (a.checkIn && b.checkIn) {\n      if (a.checkIn < b.checkIn)\n        return -1\n    }\n    return 0\n  })\n}\nconst LayoutDashboard = styled.div`\n  flex: 7 1 0%;\n  background-color: rgba(255,214,107,1);\n  display: flex;\n  \n  .table-container {\n    max-height: 91vh;\n    scroll-behavior: smooth;\n  }\n  flex-direction: column;\n  .selected-row {\n    background-color: #F0F0F0;\n  }\n \n`;\nfunction TableTime() {\n\n  const { getTimeOfEmpsToday } = useCheckInAction()\n  const emps = useSelector(empsTodayByCheckInSelector)\n\n  const latestEmpCheckIn = useSelector((state: RootState) => state.checkIn.latest)\n\n\n  useEffect(() => {\n    getTimeOfEmpsToday();\n  }, [getTimeOfEmpsToday])\n\n  useEffect(() => {\n    if (latestEmpCheckIn) {\n      const curEle = document.getElementById(`${EMP_TIME_TODAY_ID}${latestEmpCheckIn.employeeId}`)\n      if (curEle){\n        curEle.scrollIntoView()\n      }\n    }\n  }, [latestEmpCheckIn])\n\n  return (\n    <LayoutDashboard className=\"h-screen\">\n      <div className=\"md:px-10 mt-2 py-8 w-full \">\n        <div className=\"shadow overflow-hidden rounded border-b border-gray-200\">\n          <TableContainer className=\"table-container\">\n            <Table stickyHeader className=\" bg-white\" aria-label=\"sticky table\">\n\n              <TableHead>\n                <TableRow className=\"bg-gray-800 text-white \">\n                  <TableCell className=\"text-left py-3 px-4 uppercase font-semibold text-sm\">No</TableCell>\n                  <TableCell className=\"text-left py-3 px-4 uppercase font-semibold text-sm\">Name</TableCell>\n                  <TableCell className=\"text-left py-3 px-4 uppercase font-semibold text-sm\"> Check-In</TableCell>\n                  <TableCell className=\"text-left py-3 px-4 uppercase font-semibold text-sm\">Check-Out</TableCell>\n                  <TableCell className=\"text-left py-3 px-4 uppercase font-semibold text-sm\">#Note</TableCell>\n                </TableRow>\n              </TableHead>\n              <tbody className=\"text-gray-700  \">\n                {emps.length > 0 ? emps.map((emp: ITimeToday, index: number) => {\n                  return (\n                    <tr\n                      key={emp.employeeId}\n                      id={`${EMP_TIME_TODAY_ID}${emp.employeeId?.toString()}`}\n                      className={classNames({\"selected-row\": emp.employeeId === latestEmpCheckIn?.employeeId})}\n                    >\n                      <TableCell className=\"text-left py-3 px-4\">{index + 1}</TableCell>\n                      <TableCell className=\"text-left py-3 px-4\">{emp.nickName}</TableCell>\n                      <TableCell className=\"text-left py-3 px-4\"><ShowMomentTime time={emp.checkIn} /></TableCell>\n                      <TableCell className=\"text-left py-3 px-4\"><ShowMomentTime time={emp.checkOut} /></TableCell>\n                      <TableCell className=\"text-left py-3 px-4\">{emp.note}</TableCell>\n                    </tr>\n                  );\n                }) : <tr>\n                      <TableCell colSpan={5} className=\"text-center\">{'no employee today'}</TableCell>\n                  </tr>}\n              </tbody>\n            </Table>\n          </TableContainer>\n        </div>\n      </div>\n    </LayoutDashboard>\n  )\n}\nexport default TableTime"]},"metadata":{},"sourceType":"module"}