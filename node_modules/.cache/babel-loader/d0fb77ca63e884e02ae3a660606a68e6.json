{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/auttapongkompiban/Spec_mycos/mycos-makub/src/components/Dashboard/TableTimetoday.tsx\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport useCheckInAction from '../../hooks/useCheckInAction';\nconst LayoutDashboard = styled.div`\n  flex: 7 1 0%;\n  background-color: rgba(255,214,107,1);\n  display: flex;\n  flex-direction: column;\n \n`;\n_c = LayoutDashboard;\nconst columns = [{\n  id: 'No',\n  label: 'No',\n  minWidth: 170\n}, {\n  id: 'Name',\n  label: 'Name',\n  minWidth: 170\n}, {\n  id: 'Check-In',\n  label: 'Check-In',\n  minWidth: 170\n}, {\n  id: 'Check-Out',\n  label: 'Check-Out',\n  minWidth: 170\n}, {\n  id: 'Note',\n  label: 'Note',\n  minWidth: 170\n}];\n\nfunction createData(No, Name, CheckIn, CheckOut, Note) {\n  return {\n    No,\n    Name,\n    CheckIn,\n    CheckOut,\n    Note\n  };\n}\n\nfunction TableTime() {\n  _s();\n\n  const {\n    getTimeOfEmpsToday\n  } = useCheckInAction();\n  const emps = useSelector(state => state.checkIn.todayEmps);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  useEffect(() => {\n    getTimeOfEmpsToday();\n  }, [getTimeOfEmpsToday]);\n  console.log(\"emps emps:\", emps);\n  return /*#__PURE__*/_jsxDEV(LayoutDashboard, {\n    className: \"h-screen\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TableTime, \"26CtGn3AFMCMnO4JhqQQpeMhUUc=\", false, function () {\n  return [useCheckInAction, useSelector];\n});\n\n_c2 = TableTime;\nexport default TableTime;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LayoutDashboard\");\n$RefreshReg$(_c2, \"TableTime\");","map":{"version":3,"sources":["/Users/auttapongkompiban/Spec_mycos/mycos-makub/src/components/Dashboard/TableTimetoday.tsx"],"names":["styled","React","useEffect","useSelector","useCheckInAction","LayoutDashboard","div","columns","id","label","minWidth","createData","No","Name","CheckIn","CheckOut","Note","TableTime","getTimeOfEmpsToday","emps","state","checkIn","todayEmps","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","console","log"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,WAAT,QAA2B,aAA3B;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AAaA,MAAMC,eAAe,GAAGL,MAAM,CAACM,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA,CANA;KAAMD,e;AAcN,MAAME,OAAiB,GAAG,CACxB;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,QAAQ,EAAE;AAAnC,CADwB,EAExB;AAAEF,EAAAA,EAAE,EAAE,MAAN;AAAcC,EAAAA,KAAK,EAAE,MAArB;AAA6BC,EAAAA,QAAQ,EAAE;AAAvC,CAFwB,EAGxB;AAAEF,EAAAA,EAAE,EAAE,UAAN;AAAkBC,EAAAA,KAAK,EAAE,UAAzB;AAAqCC,EAAAA,QAAQ,EAAE;AAA/C,CAHwB,EAIxB;AAAEF,EAAAA,EAAE,EAAE,WAAN;AAAmBC,EAAAA,KAAK,EAAE,WAA1B;AAAuCC,EAAAA,QAAQ,EAAE;AAAjD,CAJwB,EAKxB;AAAEF,EAAAA,EAAE,EAAE,MAAN;AAAcC,EAAAA,KAAK,EAAE,MAArB;AAA6BC,EAAAA,QAAQ,EAAE;AAAvC,CALwB,CAA1B;;AAgBA,SAASC,UAAT,CAAoBC,EAApB,EAAgCC,IAAhC,EAA8CC,OAA9C,EAA+DC,QAA/D,EAAiFC,IAAjF,EAAqG;AACnG,SAAO;AAAEJ,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA,QAArB;AAA+BC,IAAAA;AAA/B,GAAP;AACD;;AAID,SAASC,SAAT,GAAqB;AAAA;;AAEjB,QAAM;AAACC,IAAAA;AAAD,MAAuBd,gBAAgB,EAA7C;AACA,QAAMe,IAAI,GAAGhB,WAAW,CAAEiB,KAAD,IAAsBA,KAAK,CAACC,OAAN,CAAcC,SAArC,CAAxB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBvB,KAAK,CAACwB,QAAN,CAAe,CAAf,CAAxB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgC1B,KAAK,CAACwB,QAAN,CAAe,EAAf,CAAtC;;AAEA,QAAMG,gBAAgB,GAAG,CAACC,KAAD,EAAiBC,OAAjB,KAAqC;AAC5DN,IAAAA,OAAO,CAACM,OAAD,CAAP;AACD,GAFD;;AAGA,QAAMC,uBAAuB,GAAIF,KAAD,IAAgD;AAC9EF,IAAAA,cAAc,CAAC,CAACE,KAAK,CAACG,MAAN,CAAaC,KAAf,CAAd;AACAT,IAAAA,OAAO,CAAC,CAAD,CAAP;AACD,GAHD;;AAMAtB,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,kBAAkB;AACrB,GAFQ,EAEN,CAACA,kBAAD,CAFM,CAAT;AAGAgB,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BhB,IAA1B;AAEE,sBACE,QAAC,eAAD;AAAiB,IAAA,SAAS,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA1BIF,S;UAEwBb,gB,EAChBD,W;;;MAHRc,S;AA2BT,eAAeA,SAAf","sourcesContent":["import styled from \"styled-components\";\nimport React,{useEffect} from 'react'\nimport { useSelector} from 'react-redux'\nimport useCheckInAction from '../../hooks/useCheckInAction'\nimport {RootState} from '../../store/reducers'\nimport Moment from 'react-moment';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\n\nconst LayoutDashboard = styled.div`\n  flex: 7 1 0%;\n  background-color: rgba(255,214,107,1);\n  display: flex;\n  flex-direction: column;\n \n`;\ninterface Column {\n  id: 'No' | 'Name' | 'Check-In' | 'Check-Out' | 'Note';\n  label: string;\n  minWidth?: number;\n  align?: 'right';\n  format?: (value: number) => string;\n}\nconst columns: Column[] = [\n  { id: 'No', label: 'No', minWidth: 170 },\n  { id: 'Name', label: 'Name', minWidth: 170 },\n  { id: 'Check-In', label: 'Check-In', minWidth: 170 },\n  { id: 'Check-Out', label: 'Check-Out', minWidth: 170 },\n  { id: 'Note', label: 'Note', minWidth: 170 },\n  \n];\ninterface Data {\n  No: number;\n  Name: string;\n  CheckIn: string;\n  CheckOut: string;\n  Note: string;\n}\n\nfunction createData(No: number, Name: string, CheckIn: string, CheckOut: string, Note: string): Data {\n  return { No, Name, CheckIn, CheckOut, Note };\n}\n\n\n\nfunction TableTime() {\n\n    const {getTimeOfEmpsToday} = useCheckInAction()\n    const emps = useSelector((state: RootState) => state.checkIn.todayEmps)\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const handleChangePage = (event: unknown, newPage: number) => {\n      setPage(newPage);\n    };\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setRowsPerPage(+event.target.value);\n      setPage(0);\n    };\n\n\n    useEffect(() => {\n        getTimeOfEmpsToday();\n    }, [getTimeOfEmpsToday])\n    console.log(\"emps emps:\", emps)\n\n      return (\n        <LayoutDashboard className=\"h-screen\">\n\n        </LayoutDashboard>\n        )\n    }\nexport default TableTime"]},"metadata":{},"sourceType":"module"}