{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { useRef, useState, useEffect, useCallback, useMemo } from \"react\";\nimport { useValidators } from \"./useValidators\";\nimport { useMapFields } from \"./useMapFields\";\nimport { useValidationFunction } from \"./commons/useValidationFunction\";\nimport { useValidationFunctionAsync } from \"./commons/useValidationFunctionAsync\";\nimport { updateState } from \"./../utils/updateState\";\nimport { chainReducers } from \"./../utils/chainReducers\";\nimport { noop } from \"./../utils/noop\";\nimport { STATUS, FORM_VALIDATION_LABEL } from \"./../utils/constants\";\nimport { createForm, isFormValid, isFormValidAsync, generateAsynFuncs, shouldRunAsyncValidator, flatAsyncValidationMap } from \"./../utils/formUtils\";\nvar emptyStateValue = {};\nvar validatorsDefault = [];\nexport function useForm(_ref) {\n  var initialState = _ref.initialState,\n      touched = _ref.touched,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? noop : _ref$onChange,\n      _ref$onReset = _ref.onReset,\n      onReset = _ref$onReset === void 0 ? noop : _ref$onReset,\n      _ref$onInit = _ref.onInit,\n      onInit = _ref$onInit === void 0 ? noop : _ref$onInit,\n      _ref$onSubmit = _ref.onSubmit,\n      onSubmit = _ref$onSubmit === void 0 ? noop : _ref$onSubmit,\n      _ref$onValidation = _ref.onValidation,\n      onValidation = _ref$onValidation === void 0 ? noop : _ref$onValidation,\n      _ref$resetSyncErr = _ref.resetSyncErr,\n      resetSyncErr = _ref$resetSyncErr === void 0 ? noop : _ref$resetSyncErr,\n      _ref$validators = _ref.validators,\n      validatorsFuncs = _ref$validators === void 0 ? validatorsDefault : _ref$validators,\n      _ref$resetAsyncErr = _ref.resetAsyncErr,\n      resetAsyncErr = _ref$resetAsyncErr === void 0 ? noop : _ref$resetAsyncErr,\n      asyncValidator = _ref.asyncValidator,\n      _ref$onAsyncValidatio = _ref.onAsyncValidation,\n      onAsyncValidation = _ref$onAsyncValidatio === void 0 ? noop : _ref$onAsyncValidatio,\n      reducers = _ref.reducers,\n      _getInitilaStateForm_ = _ref._getInitilaStateForm_,\n      _onMultipleForm_ = _ref._onMultipleForm_,\n      name = _ref.name,\n      action = _ref.action;\n\n  var _useState = useState(function () {\n    return createForm(initialState);\n  }),\n      formState = _useState[0],\n      dispatch = _useState[1];\n\n  var stateRef = useRef(formState);\n\n  var _useRef = useRef(isUsingMultipleForm(_getInitilaStateForm_, _onMultipleForm_, name)),\n      isMultipleForm = _useRef.current;\n\n  var dispatchFormState = useCallback(function (_ref2) {\n    var state = _ref2.state,\n        status = _ref2.status,\n        rest = _objectWithoutPropertiesLoose(_ref2, [\"state\", \"status\"]);\n\n    var prevState = status === STATUS.ON_RESET ? memoInitialState.current.state : status === STATUS.ON_INIT ? emptyStateValue : stateRef.current.state;\n    var newState = status === STATUS.READY || status === STATUS.ON_SUBMIT ? state : applyReducers(state, prevState, prevState);\n    stateRef.current = _extends({}, rest, {\n      status: status,\n      state: newState\n    });\n    dispatch(stateRef.current);\n  }, []);\n  var memoInitialState = useRef(_extends({}, formState));\n  var isMounted = useRef(false);\n  var stillMounted = useCallback(function () {\n    return isMounted.current;\n  }, []);\n\n  var _useValidators = useValidators(undefined, undefined, isMounted),\n      validators = _useValidators[0],\n      addValidators = _useValidators[1],\n      removeValidators = _useValidators[2];\n\n  var _useValidationFunctio = useValidationFunction(validatorsFuncs),\n      validationMsg = _useValidationFunctio.validationMsg,\n      validationObj = _useValidationFunctio.validationObj,\n      validationFN = _useValidationFunctio.validationFN;\n\n  var _useValidationFunctio2 = useValidationFunctionAsync(asyncValidator, onAsyncValidation),\n      validationFNAsync = _useValidationFunctio2[0];\n\n  var _useValidators2 = useValidators(undefined, undefined, isMounted, true),\n      validatorsAsync = _useValidators2[0],\n      addValidatorsAsync = _useValidators2[1],\n      removeValidatorsAsync = _useValidators2[2],\n      validatorsMapsAsync = _useValidators2[3],\n      updateValidatorsMap = _useValidators2[4],\n      resetValidatorsMap = _useValidators2[5];\n\n  var applyReducers = useMemo(function () {\n    return chainReducers(reducers);\n  }, []);\n\n  var _useMapFields = useMapFields(),\n      unRegisterField = _useMapFields.unRegisterField,\n      mapFields = _useMapFields.mapFields,\n      updateRegisteredField = _useMapFields.updateRegisteredField;\n\n  var changeProp = useCallback(function (nameProp, value, removeMe) {\n    if (removeMe === void 0) {\n      removeMe = false;\n    }\n\n    var newState = updateState(stateRef.current.state, {\n      value: value,\n      nameProp: nameProp,\n      removeMe: removeMe\n    });\n    propagateState(newState, false);\n  }, []);\n  var initProp = useCallback(function (nameProp, value, initialValue) {\n    if (isMounted.current) {\n      // we must update the memoInitialState with the new prop if form is mounted\n      memoInitialState.current.state = updateState(memoInitialState.current.state, {\n        isValid: initialValue,\n        nameProp: nameProp\n      });\n      var newState = updateState(stateRef.current.state, {\n        value: value,\n        nameProp: nameProp\n      });\n      propagateState(newState, false);\n    } else {\n      var newStateInitial = updateState(memoInitialState.current.state, {\n        value: initialValue,\n        nameProp: nameProp\n      });\n\n      var _newState = updateState(stateRef.current.state, {\n        value: value,\n        nameProp: nameProp\n      });\n\n      memoInitialState.current.state = newStateInitial;\n      stateRef.current.state = _newState;\n    }\n  }, []);\n  var removeProp = useCallback(function (namePropExt, _ref3) {\n    var currentState = _ref3.currentState,\n        removeCurrent = _ref3.removeCurrent,\n        initialState = _ref3.initialState,\n        removeInitial = _ref3.removeInitial;\n    var newState = updateState(stateRef.current.state, {\n      value: currentState,\n      nameProp: namePropExt,\n      removeMe: removeCurrent\n    }); // if a prop removed was also a prop already initialized we must update the memoInitialState\n\n    memoInitialState.current.state = updateState(memoInitialState.current.state, {\n      value: initialState,\n      nameProp: namePropExt,\n      removeMe: removeInitial\n    });\n    propagateState(newState);\n  }, []);\n  var propagateState = useCallback(function (state, changePristine, status) {\n    if (status === void 0) {\n      status = STATUS.ON_CHANGE;\n    }\n\n    var pristine = changePristine !== undefined ? changePristine : stateRef.current.pristine;\n    var isValid = isFormValid(validators.current, state) && isFormValidAsync(validatorsMapsAsync.current);\n    dispatchFormState(_extends({}, stateRef.current, {\n      state: state,\n      isValid: isValid,\n      pristine: pristine,\n      status: status\n    }));\n  }, []);\n  var resetObj = useRef({});\n  var registerReset = useCallback(function (nameProp, fnReset) {\n    var _extends2;\n\n    resetObj.current = _extends({}, resetObj.current, (_extends2 = {}, _extends2[nameProp] = fnReset, _extends2));\n  }, []);\n  var unRegisterReset = useCallback(function (nameProp) {\n    delete resetObj.current[nameProp];\n  }, []);\n  var reset = useCallback(function () {\n    var state = Object.keys(resetObj.current).reduce(function (acc, key) {\n      var value = resetObj.current[key](memoInitialState.current.state);\n      if (value !== undefined) acc[key] = value;\n      return acc;\n    }, {});\n    var validatorsMapsAsync = resetValidatorsMap();\n    var isValid = isFormValid(validators.current, state) && isFormValidAsync(validatorsMapsAsync);\n    var status = STATUS.ON_RESET;\n    dispatchFormState(_extends({}, memoInitialState.current, {\n      state: state,\n      status: status,\n      isValid: isValid\n    }));\n  }, []);\n  var onSubmitForm = useCallback(function (e) {\n    e.persist();\n    var _stateRef$current = stateRef.current,\n        isValid = _stateRef$current.isValid,\n        prevAttempts = _stateRef$current.submitAttempts;\n    var status = STATUS.ON_SUBMIT;\n\n    if (typeof action !== \"string\" || !isValid) {\n      e.preventDefault();\n    }\n\n    var submitAttempts = prevAttempts + 1;\n\n    if (isValid && Object.keys(validatorsAsync.current).length > 0 && shouldRunAsyncValidator(validatorsMapsAsync.current)) {\n      var state = stateRef.current.state;\n      var asyncArrayProm = generateAsynFuncs(validatorsAsync.current, validatorsMapsAsync.current, state, updateValidatorsMap);\n      var target = e.target;\n      e.preventDefault(); // Set isValid to false until it ends the async checks\n\n      dispatchFormState(_extends({}, stateRef.current, {\n        isValid: false,\n        isSubmitting: true,\n        submitAttempts: submitAttempts\n      }));\n      Promise.all(asyncArrayProm).then(function () {\n        if (typeof action === \"string\") {\n          target.submit();\n        } else {\n          dispatchFormState(_extends({}, stateRef.current, {\n            status: status,\n            isValid: true\n          }));\n        }\n      }).catch(function () {\n        var isValid = shouldRunAsyncValidator(validatorsMapsAsync.current);\n        var isSubmitting = false;\n        dispatchFormState(_extends({}, stateRef.current, {\n          isValid: isValid,\n          isSubmitting: isSubmitting\n        }));\n      });\n    } else {\n      dispatchFormState(_extends({}, stateRef.current, {\n        status: status,\n        isSubmitting: true,\n        submitAttempts: submitAttempts\n      }));\n    }\n  }, []); // used only to replace the entire Form State\n\n  var dispatchNewState = useCallback(function (nextState) {\n    var newState = nextState;\n\n    if (typeof nextState === \"function\") {\n      var currentState = stateRef.current.state;\n      newState = nextState(currentState);\n    }\n\n    propagateState(newState, false);\n  }, []);\n  var isFormTouchedOnce = useRef(false);\n  var lastStateSyncCheck = useRef(null);\n  var triggerSyncValidation = useCallback(function (omitArg1, omitArg2, touchedEventField) {\n    if (touchedEventField === void 0) {\n      touchedEventField = true;\n    }\n\n    if (lastStateSyncCheck.current !== stateRef.current.state && validationObj.current !== null && (isFormTouchedOnce.current || touched && touchedEventField || !touched)) {\n      isFormTouchedOnce.current = true;\n      lastStateSyncCheck.current = stateRef.current.state;\n      var _validationObj$curren = validationObj.current,\n          isValid = _validationObj$curren.isValid,\n          checks = _validationObj$curren.checks;\n      onValidation(checks, isValid);\n    }\n  }, []); // used to register async validation Actions\n\n  var asyncInitValidation = useRef({});\n  var registerAsyncInitValidation = useCallback(function (nameProp, asyncFunc) {\n    asyncInitValidation.current[nameProp] = asyncFunc;\n  }, []);\n  var runInitialAsyncValidators = useCallback(function () {\n    var keyAsyncValitions = Object.keys(asyncInitValidation.current);\n\n    if (keyAsyncValitions.length > 0) {\n      var status = STATUS.ON_INIT_ASYNC;\n      dispatchFormState(_extends({}, stateRef.current, {\n        status: status\n      }));\n      var promises = flatAsyncValidationMap(asyncInitValidation.current);\n      Promise.all(promises).then(function () {\n        var status = STATUS.READY;\n        var isValid = isFormValid(validators.current, stateRef.current.state);\n        dispatchFormState(_extends({}, stateRef.current, {\n          status: status,\n          isValid: isValid\n        }));\n      }).catch(function () {\n        var status = STATUS.READY;\n        var isValid = false;\n        dispatchFormState(_extends({}, stateRef.current, {\n          status: status,\n          isValid: isValid\n        }));\n      });\n    }\n  }, []);\n  var runAsyncValidation = useCallback(function (_ref4) {\n    var start = _ref4.start,\n        end = _ref4.end;\n\n    if (start) {\n      var status = STATUS.ON_RUN_ASYNC;\n      dispatchFormState(_extends({}, stateRef.current, {\n        isValid: false,\n        status: status\n      }));\n    } else if (end) {\n      var _status = STATUS.ON_ASYNC_END;\n      var isValid = isFormValid(validators.current, stateRef.current.state) && isFormValidAsync(validatorsMapsAsync.current);\n      dispatchFormState(_extends({}, stateRef.current, {\n        isValid: isValid,\n        status: _status\n      }));\n    }\n  }, []); // change status form to READY after being reset\n\n  useEffect(function () {\n    var _stateRef$current2 = stateRef.current,\n        status = _stateRef$current2.status,\n        state = _stateRef$current2.state,\n        isValid = _stateRef$current2.isValid;\n\n    if (status === STATUS.ON_RESET) {\n      onReset(state, isValid);\n      dispatchFormState(_extends({}, stateRef.current, {\n        status: STATUS.RESETTED\n      }));\n    } else if (status === STATUS.ON_CHANGE) {\n      onChange(state, isValid);\n    } else if (status === STATUS.ON_INIT) {\n      runInitialAsyncValidators();\n      onInit(state, isValid);\n    } else if (status === STATUS.ON_SUBMIT) {\n      var common = {\n        isSubmitting: false,\n        status: STATUS.READY\n      };\n\n      if (isValid) {\n        var result = onSubmit(state, isValid);\n\n        if (result && typeof result.then === \"function\") {\n          result.then(function () {\n            var submitted = stateRef.current.submitted + 1;\n            dispatchFormState(_extends({}, stateRef.current, common, {\n              submitted: submitted\n            }));\n          }).catch(function () {\n            return dispatchFormState(_extends({}, stateRef.current, common));\n          });\n        } else {\n          var prevSub = stateRef.current.submitted;\n          var submitted = result === false ? prevSub : prevSub + 1;\n          dispatchFormState(_extends({}, stateRef.current, common, {\n            submitted: submitted\n          }));\n        }\n      } else {\n        dispatchFormState(_extends({}, stateRef.current, common));\n      }\n    }\n\n    if (isMultipleForm && (status === STATUS.ON_RESET || status === STATUS.ON_CHANGE || status === STATUS.ON_INIT || status === STATUS.ON_SUBMIT)) {\n      _onMultipleForm_(name, state);\n    }\n  }, [stateRef.current]); // after form is mounted dispatch the initial state\n\n  useEffect(function () {\n    isMounted.current = true; // Add its own validators\n\n    if (validatorsFuncs.length > 0) {\n      addValidators(FORM_VALIDATION_LABEL, validationFN.current);\n    } // Add its own async validator func\n\n\n    if (typeof asyncValidator === \"function\") {\n      addValidatorsAsync(FORM_VALIDATION_LABEL, validationFNAsync.current, null);\n    }\n\n    var pristine = isMultipleForm && (_getInitilaStateForm_(name) == undefined || Object.keys(_getInitilaStateForm_(name)).length === 0) || !isMultipleForm;\n    var state = isMultipleForm ? _getInitilaStateForm_(name) || stateRef.current.state : stateRef.current.state;\n    var isValid = isFormValid(validators.current, state) && isFormValidAsync(validatorsMapsAsync.current);\n    stateRef.current = _extends({}, stateRef.current, {\n      state: state,\n      isValid: isValid,\n      pristine: pristine,\n      status: STATUS.ON_INIT\n    });\n    dispatchFormState(stateRef.current);\n  }, []);\n  useEffect(function () {\n    var formStatus = formState.status;\n\n    if (formStatus === STATUS.ON_RESET) {\n      isFormTouchedOnce.current = false;\n      lastStateSyncCheck.current = false;\n      resetSyncErr();\n      resetAsyncErr();\n    } else if (formStatus !== STATUS.READY && formStatus !== STATUS.ON_INIT_ASYNC) {\n      if (validationObj.current !== null) {\n        triggerSyncValidation(false, true, false);\n      }\n\n      if (validationObj.current !== null && !validationObj.current.isValid) {\n        resetAsyncErr();\n      }\n    }\n  }, [validationMsg.current, formState.status]);\n  return _extends({}, formState, {\n    // { isValid, state, status, pristine, isSubmitting }\n    formState: formState.state,\n    // pass the global form state down\n    formStatus: formState.status,\n    // pass the global form status down\n    mapFields: mapFields.current,\n    triggerSyncValidation: triggerSyncValidation,\n    unRegisterField: unRegisterField,\n    updateRegisteredField: updateRegisteredField,\n    registerAsyncInitValidation: registerAsyncInitValidation,\n    runAsyncValidation: runAsyncValidation,\n    dispatchNewState: dispatchNewState,\n    changeProp: changeProp,\n    initProp: initProp,\n    onSubmitForm: onSubmitForm,\n    removeProp: removeProp,\n    stillMounted: stillMounted,\n    reset: reset,\n    addValidators: addValidators,\n    removeValidators: removeValidators,\n    addValidatorsAsync: addValidatorsAsync,\n    removeValidatorsAsync: removeValidatorsAsync,\n    updateValidatorsMap: updateValidatorsMap,\n    registerReset: registerReset,\n    unRegisterReset: unRegisterReset\n  });\n}\n\nfunction isUsingMultipleForm(_getInitilaStateForm_, _onMultipleForm_, name) {\n  return typeof _getInitilaStateForm_ === \"function\" && typeof _onMultipleForm_ === \"function\" && typeof name === \"string\";\n}","map":{"version":3,"sources":["/Users/auttapongkompiban/Spec_mycos/mycos-makub/node_modules/usetheform/build/es/hooks/useForm.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","useRef","useState","useEffect","useCallback","useMemo","useValidators","useMapFields","useValidationFunction","useValidationFunctionAsync","updateState","chainReducers","noop","STATUS","FORM_VALIDATION_LABEL","createForm","isFormValid","isFormValidAsync","generateAsynFuncs","shouldRunAsyncValidator","flatAsyncValidationMap","emptyStateValue","validatorsDefault","useForm","_ref","initialState","touched","_ref$onChange","onChange","_ref$onReset","onReset","_ref$onInit","onInit","_ref$onSubmit","onSubmit","_ref$onValidation","onValidation","_ref$resetSyncErr","resetSyncErr","_ref$validators","validators","validatorsFuncs","_ref$resetAsyncErr","resetAsyncErr","asyncValidator","_ref$onAsyncValidatio","onAsyncValidation","reducers","_getInitilaStateForm_","_onMultipleForm_","name","action","_useState","formState","dispatch","stateRef","_useRef","isUsingMultipleForm","isMultipleForm","current","dispatchFormState","_ref2","state","status","rest","prevState","ON_RESET","memoInitialState","ON_INIT","newState","READY","ON_SUBMIT","applyReducers","isMounted","stillMounted","_useValidators","undefined","addValidators","removeValidators","_useValidationFunctio","validationMsg","validationObj","validationFN","_useValidationFunctio2","validationFNAsync","_useValidators2","validatorsAsync","addValidatorsAsync","removeValidatorsAsync","validatorsMapsAsync","updateValidatorsMap","resetValidatorsMap","_useMapFields","unRegisterField","mapFields","updateRegisteredField","changeProp","nameProp","value","removeMe","propagateState","initProp","initialValue","isValid","newStateInitial","_newState","removeProp","namePropExt","_ref3","currentState","removeCurrent","removeInitial","changePristine","ON_CHANGE","pristine","resetObj","registerReset","fnReset","_extends2","unRegisterReset","reset","reduce","acc","onSubmitForm","e","persist","_stateRef$current","prevAttempts","submitAttempts","preventDefault","asyncArrayProm","isSubmitting","Promise","all","then","submit","catch","dispatchNewState","nextState","isFormTouchedOnce","lastStateSyncCheck","triggerSyncValidation","omitArg1","omitArg2","touchedEventField","_validationObj$curren","checks","asyncInitValidation","registerAsyncInitValidation","asyncFunc","runInitialAsyncValidators","keyAsyncValitions","ON_INIT_ASYNC","promises","runAsyncValidation","_ref4","start","end","ON_RUN_ASYNC","_status","ON_ASYNC_END","_stateRef$current2","RESETTED","common","result","submitted","prevSub","formStatus"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useRef, useState, useEffect, useCallback, useMemo } from \"react\";\nimport { useValidators } from \"./useValidators\";\nimport { useMapFields } from \"./useMapFields\";\nimport { useValidationFunction } from \"./commons/useValidationFunction\";\nimport { useValidationFunctionAsync } from \"./commons/useValidationFunctionAsync\";\nimport { updateState } from \"./../utils/updateState\";\nimport { chainReducers } from \"./../utils/chainReducers\";\nimport { noop } from \"./../utils/noop\";\nimport { STATUS, FORM_VALIDATION_LABEL } from \"./../utils/constants\";\nimport { createForm, isFormValid, isFormValidAsync, generateAsynFuncs, shouldRunAsyncValidator, flatAsyncValidationMap } from \"./../utils/formUtils\";\nvar emptyStateValue = {};\nvar validatorsDefault = [];\nexport function useForm(_ref) {\n  var initialState = _ref.initialState,\n      touched = _ref.touched,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? noop : _ref$onChange,\n      _ref$onReset = _ref.onReset,\n      onReset = _ref$onReset === void 0 ? noop : _ref$onReset,\n      _ref$onInit = _ref.onInit,\n      onInit = _ref$onInit === void 0 ? noop : _ref$onInit,\n      _ref$onSubmit = _ref.onSubmit,\n      onSubmit = _ref$onSubmit === void 0 ? noop : _ref$onSubmit,\n      _ref$onValidation = _ref.onValidation,\n      onValidation = _ref$onValidation === void 0 ? noop : _ref$onValidation,\n      _ref$resetSyncErr = _ref.resetSyncErr,\n      resetSyncErr = _ref$resetSyncErr === void 0 ? noop : _ref$resetSyncErr,\n      _ref$validators = _ref.validators,\n      validatorsFuncs = _ref$validators === void 0 ? validatorsDefault : _ref$validators,\n      _ref$resetAsyncErr = _ref.resetAsyncErr,\n      resetAsyncErr = _ref$resetAsyncErr === void 0 ? noop : _ref$resetAsyncErr,\n      asyncValidator = _ref.asyncValidator,\n      _ref$onAsyncValidatio = _ref.onAsyncValidation,\n      onAsyncValidation = _ref$onAsyncValidatio === void 0 ? noop : _ref$onAsyncValidatio,\n      reducers = _ref.reducers,\n      _getInitilaStateForm_ = _ref._getInitilaStateForm_,\n      _onMultipleForm_ = _ref._onMultipleForm_,\n      name = _ref.name,\n      action = _ref.action;\n\n  var _useState = useState(function () {\n    return createForm(initialState);\n  }),\n      formState = _useState[0],\n      dispatch = _useState[1];\n\n  var stateRef = useRef(formState);\n\n  var _useRef = useRef(isUsingMultipleForm(_getInitilaStateForm_, _onMultipleForm_, name)),\n      isMultipleForm = _useRef.current;\n\n  var dispatchFormState = useCallback(function (_ref2) {\n    var state = _ref2.state,\n        status = _ref2.status,\n        rest = _objectWithoutPropertiesLoose(_ref2, [\"state\", \"status\"]);\n\n    var prevState = status === STATUS.ON_RESET ? memoInitialState.current.state : status === STATUS.ON_INIT ? emptyStateValue : stateRef.current.state;\n    var newState = status === STATUS.READY || status === STATUS.ON_SUBMIT ? state : applyReducers(state, prevState, prevState);\n    stateRef.current = _extends({}, rest, {\n      status: status,\n      state: newState\n    });\n    dispatch(stateRef.current);\n  }, []);\n  var memoInitialState = useRef(_extends({}, formState));\n  var isMounted = useRef(false);\n  var stillMounted = useCallback(function () {\n    return isMounted.current;\n  }, []);\n\n  var _useValidators = useValidators(undefined, undefined, isMounted),\n      validators = _useValidators[0],\n      addValidators = _useValidators[1],\n      removeValidators = _useValidators[2];\n\n  var _useValidationFunctio = useValidationFunction(validatorsFuncs),\n      validationMsg = _useValidationFunctio.validationMsg,\n      validationObj = _useValidationFunctio.validationObj,\n      validationFN = _useValidationFunctio.validationFN;\n\n  var _useValidationFunctio2 = useValidationFunctionAsync(asyncValidator, onAsyncValidation),\n      validationFNAsync = _useValidationFunctio2[0];\n\n  var _useValidators2 = useValidators(undefined, undefined, isMounted, true),\n      validatorsAsync = _useValidators2[0],\n      addValidatorsAsync = _useValidators2[1],\n      removeValidatorsAsync = _useValidators2[2],\n      validatorsMapsAsync = _useValidators2[3],\n      updateValidatorsMap = _useValidators2[4],\n      resetValidatorsMap = _useValidators2[5];\n\n  var applyReducers = useMemo(function () {\n    return chainReducers(reducers);\n  }, []);\n\n  var _useMapFields = useMapFields(),\n      unRegisterField = _useMapFields.unRegisterField,\n      mapFields = _useMapFields.mapFields,\n      updateRegisteredField = _useMapFields.updateRegisteredField;\n\n  var changeProp = useCallback(function (nameProp, value, removeMe) {\n    if (removeMe === void 0) {\n      removeMe = false;\n    }\n\n    var newState = updateState(stateRef.current.state, {\n      value: value,\n      nameProp: nameProp,\n      removeMe: removeMe\n    });\n    propagateState(newState, false);\n  }, []);\n  var initProp = useCallback(function (nameProp, value, initialValue) {\n    if (isMounted.current) {\n      // we must update the memoInitialState with the new prop if form is mounted\n      memoInitialState.current.state = updateState(memoInitialState.current.state, {\n        isValid: initialValue,\n        nameProp: nameProp\n      });\n      var newState = updateState(stateRef.current.state, {\n        value: value,\n        nameProp: nameProp\n      });\n      propagateState(newState, false);\n    } else {\n      var newStateInitial = updateState(memoInitialState.current.state, {\n        value: initialValue,\n        nameProp: nameProp\n      });\n\n      var _newState = updateState(stateRef.current.state, {\n        value: value,\n        nameProp: nameProp\n      });\n\n      memoInitialState.current.state = newStateInitial;\n      stateRef.current.state = _newState;\n    }\n  }, []);\n  var removeProp = useCallback(function (namePropExt, _ref3) {\n    var currentState = _ref3.currentState,\n        removeCurrent = _ref3.removeCurrent,\n        initialState = _ref3.initialState,\n        removeInitial = _ref3.removeInitial;\n    var newState = updateState(stateRef.current.state, {\n      value: currentState,\n      nameProp: namePropExt,\n      removeMe: removeCurrent\n    }); // if a prop removed was also a prop already initialized we must update the memoInitialState\n\n    memoInitialState.current.state = updateState(memoInitialState.current.state, {\n      value: initialState,\n      nameProp: namePropExt,\n      removeMe: removeInitial\n    });\n    propagateState(newState);\n  }, []);\n  var propagateState = useCallback(function (state, changePristine, status) {\n    if (status === void 0) {\n      status = STATUS.ON_CHANGE;\n    }\n\n    var pristine = changePristine !== undefined ? changePristine : stateRef.current.pristine;\n    var isValid = isFormValid(validators.current, state) && isFormValidAsync(validatorsMapsAsync.current);\n    dispatchFormState(_extends({}, stateRef.current, {\n      state: state,\n      isValid: isValid,\n      pristine: pristine,\n      status: status\n    }));\n  }, []);\n  var resetObj = useRef({});\n  var registerReset = useCallback(function (nameProp, fnReset) {\n    var _extends2;\n\n    resetObj.current = _extends({}, resetObj.current, (_extends2 = {}, _extends2[nameProp] = fnReset, _extends2));\n  }, []);\n  var unRegisterReset = useCallback(function (nameProp) {\n    delete resetObj.current[nameProp];\n  }, []);\n  var reset = useCallback(function () {\n    var state = Object.keys(resetObj.current).reduce(function (acc, key) {\n      var value = resetObj.current[key](memoInitialState.current.state);\n      if (value !== undefined) acc[key] = value;\n      return acc;\n    }, {});\n    var validatorsMapsAsync = resetValidatorsMap();\n    var isValid = isFormValid(validators.current, state) && isFormValidAsync(validatorsMapsAsync);\n    var status = STATUS.ON_RESET;\n    dispatchFormState(_extends({}, memoInitialState.current, {\n      state: state,\n      status: status,\n      isValid: isValid\n    }));\n  }, []);\n  var onSubmitForm = useCallback(function (e) {\n    e.persist();\n    var _stateRef$current = stateRef.current,\n        isValid = _stateRef$current.isValid,\n        prevAttempts = _stateRef$current.submitAttempts;\n    var status = STATUS.ON_SUBMIT;\n\n    if (typeof action !== \"string\" || !isValid) {\n      e.preventDefault();\n    }\n\n    var submitAttempts = prevAttempts + 1;\n\n    if (isValid && Object.keys(validatorsAsync.current).length > 0 && shouldRunAsyncValidator(validatorsMapsAsync.current)) {\n      var state = stateRef.current.state;\n      var asyncArrayProm = generateAsynFuncs(validatorsAsync.current, validatorsMapsAsync.current, state, updateValidatorsMap);\n      var target = e.target;\n      e.preventDefault(); // Set isValid to false until it ends the async checks\n\n      dispatchFormState(_extends({}, stateRef.current, {\n        isValid: false,\n        isSubmitting: true,\n        submitAttempts: submitAttempts\n      }));\n      Promise.all(asyncArrayProm).then(function () {\n        if (typeof action === \"string\") {\n          target.submit();\n        } else {\n          dispatchFormState(_extends({}, stateRef.current, {\n            status: status,\n            isValid: true\n          }));\n        }\n      }).catch(function () {\n        var isValid = shouldRunAsyncValidator(validatorsMapsAsync.current);\n        var isSubmitting = false;\n        dispatchFormState(_extends({}, stateRef.current, {\n          isValid: isValid,\n          isSubmitting: isSubmitting\n        }));\n      });\n    } else {\n      dispatchFormState(_extends({}, stateRef.current, {\n        status: status,\n        isSubmitting: true,\n        submitAttempts: submitAttempts\n      }));\n    }\n  }, []); // used only to replace the entire Form State\n\n  var dispatchNewState = useCallback(function (nextState) {\n    var newState = nextState;\n\n    if (typeof nextState === \"function\") {\n      var currentState = stateRef.current.state;\n      newState = nextState(currentState);\n    }\n\n    propagateState(newState, false);\n  }, []);\n  var isFormTouchedOnce = useRef(false);\n  var lastStateSyncCheck = useRef(null);\n  var triggerSyncValidation = useCallback(function (omitArg1, omitArg2, touchedEventField) {\n    if (touchedEventField === void 0) {\n      touchedEventField = true;\n    }\n\n    if (lastStateSyncCheck.current !== stateRef.current.state && validationObj.current !== null && (isFormTouchedOnce.current || touched && touchedEventField || !touched)) {\n      isFormTouchedOnce.current = true;\n      lastStateSyncCheck.current = stateRef.current.state;\n      var _validationObj$curren = validationObj.current,\n          isValid = _validationObj$curren.isValid,\n          checks = _validationObj$curren.checks;\n      onValidation(checks, isValid);\n    }\n  }, []); // used to register async validation Actions\n\n  var asyncInitValidation = useRef({});\n  var registerAsyncInitValidation = useCallback(function (nameProp, asyncFunc) {\n    asyncInitValidation.current[nameProp] = asyncFunc;\n  }, []);\n  var runInitialAsyncValidators = useCallback(function () {\n    var keyAsyncValitions = Object.keys(asyncInitValidation.current);\n\n    if (keyAsyncValitions.length > 0) {\n      var status = STATUS.ON_INIT_ASYNC;\n      dispatchFormState(_extends({}, stateRef.current, {\n        status: status\n      }));\n      var promises = flatAsyncValidationMap(asyncInitValidation.current);\n      Promise.all(promises).then(function () {\n        var status = STATUS.READY;\n        var isValid = isFormValid(validators.current, stateRef.current.state);\n        dispatchFormState(_extends({}, stateRef.current, {\n          status: status,\n          isValid: isValid\n        }));\n      }).catch(function () {\n        var status = STATUS.READY;\n        var isValid = false;\n        dispatchFormState(_extends({}, stateRef.current, {\n          status: status,\n          isValid: isValid\n        }));\n      });\n    }\n  }, []);\n  var runAsyncValidation = useCallback(function (_ref4) {\n    var start = _ref4.start,\n        end = _ref4.end;\n\n    if (start) {\n      var status = STATUS.ON_RUN_ASYNC;\n      dispatchFormState(_extends({}, stateRef.current, {\n        isValid: false,\n        status: status\n      }));\n    } else if (end) {\n      var _status = STATUS.ON_ASYNC_END;\n      var isValid = isFormValid(validators.current, stateRef.current.state) && isFormValidAsync(validatorsMapsAsync.current);\n      dispatchFormState(_extends({}, stateRef.current, {\n        isValid: isValid,\n        status: _status\n      }));\n    }\n  }, []); // change status form to READY after being reset\n\n  useEffect(function () {\n    var _stateRef$current2 = stateRef.current,\n        status = _stateRef$current2.status,\n        state = _stateRef$current2.state,\n        isValid = _stateRef$current2.isValid;\n\n    if (status === STATUS.ON_RESET) {\n      onReset(state, isValid);\n      dispatchFormState(_extends({}, stateRef.current, {\n        status: STATUS.RESETTED\n      }));\n    } else if (status === STATUS.ON_CHANGE) {\n      onChange(state, isValid);\n    } else if (status === STATUS.ON_INIT) {\n      runInitialAsyncValidators();\n      onInit(state, isValid);\n    } else if (status === STATUS.ON_SUBMIT) {\n      var common = {\n        isSubmitting: false,\n        status: STATUS.READY\n      };\n\n      if (isValid) {\n        var result = onSubmit(state, isValid);\n\n        if (result && typeof result.then === \"function\") {\n          result.then(function () {\n            var submitted = stateRef.current.submitted + 1;\n            dispatchFormState(_extends({}, stateRef.current, common, {\n              submitted: submitted\n            }));\n          }).catch(function () {\n            return dispatchFormState(_extends({}, stateRef.current, common));\n          });\n        } else {\n          var prevSub = stateRef.current.submitted;\n          var submitted = result === false ? prevSub : prevSub + 1;\n          dispatchFormState(_extends({}, stateRef.current, common, {\n            submitted: submitted\n          }));\n        }\n      } else {\n        dispatchFormState(_extends({}, stateRef.current, common));\n      }\n    }\n\n    if (isMultipleForm && (status === STATUS.ON_RESET || status === STATUS.ON_CHANGE || status === STATUS.ON_INIT || status === STATUS.ON_SUBMIT)) {\n      _onMultipleForm_(name, state);\n    }\n  }, [stateRef.current]); // after form is mounted dispatch the initial state\n\n  useEffect(function () {\n    isMounted.current = true; // Add its own validators\n\n    if (validatorsFuncs.length > 0) {\n      addValidators(FORM_VALIDATION_LABEL, validationFN.current);\n    } // Add its own async validator func\n\n\n    if (typeof asyncValidator === \"function\") {\n      addValidatorsAsync(FORM_VALIDATION_LABEL, validationFNAsync.current, null);\n    }\n\n    var pristine = isMultipleForm && (_getInitilaStateForm_(name) == undefined || Object.keys(_getInitilaStateForm_(name)).length === 0) || !isMultipleForm;\n    var state = isMultipleForm ? _getInitilaStateForm_(name) || stateRef.current.state : stateRef.current.state;\n    var isValid = isFormValid(validators.current, state) && isFormValidAsync(validatorsMapsAsync.current);\n    stateRef.current = _extends({}, stateRef.current, {\n      state: state,\n      isValid: isValid,\n      pristine: pristine,\n      status: STATUS.ON_INIT\n    });\n    dispatchFormState(stateRef.current);\n  }, []);\n  useEffect(function () {\n    var formStatus = formState.status;\n\n    if (formStatus === STATUS.ON_RESET) {\n      isFormTouchedOnce.current = false;\n      lastStateSyncCheck.current = false;\n      resetSyncErr();\n      resetAsyncErr();\n    } else if (formStatus !== STATUS.READY && formStatus !== STATUS.ON_INIT_ASYNC) {\n      if (validationObj.current !== null) {\n        triggerSyncValidation(false, true, false);\n      }\n\n      if (validationObj.current !== null && !validationObj.current.isValid) {\n        resetAsyncErr();\n      }\n    }\n  }, [validationMsg.current, formState.status]);\n  return _extends({}, formState, {\n    // { isValid, state, status, pristine, isSubmitting }\n    formState: formState.state,\n    // pass the global form state down\n    formStatus: formState.status,\n    // pass the global form status down\n    mapFields: mapFields.current,\n    triggerSyncValidation: triggerSyncValidation,\n    unRegisterField: unRegisterField,\n    updateRegisteredField: updateRegisteredField,\n    registerAsyncInitValidation: registerAsyncInitValidation,\n    runAsyncValidation: runAsyncValidation,\n    dispatchNewState: dispatchNewState,\n    changeProp: changeProp,\n    initProp: initProp,\n    onSubmitForm: onSubmitForm,\n    removeProp: removeProp,\n    stillMounted: stillMounted,\n    reset: reset,\n    addValidators: addValidators,\n    removeValidators: removeValidators,\n    addValidatorsAsync: addValidatorsAsync,\n    removeValidatorsAsync: removeValidatorsAsync,\n    updateValidatorsMap: updateValidatorsMap,\n    registerReset: registerReset,\n    unRegisterReset: unRegisterReset\n  });\n}\n\nfunction isUsingMultipleForm(_getInitilaStateForm_, _onMultipleForm_, name) {\n  return typeof _getInitilaStateForm_ === \"function\" && typeof _onMultipleForm_ === \"function\" && typeof name === \"string\";\n}"]},"metadata":{},"sourceType":"module"}