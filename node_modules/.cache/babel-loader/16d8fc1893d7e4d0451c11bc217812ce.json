{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/auttapongkompiban/Spec_mycos/mycos-makub/src/components/Dashboard/TableTimetoday.tsx\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport useCheckInAction from '../../hooks/useCheckInAction';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport classNames from 'classnames';\nimport ShowMomentTime from \"./ShowMomentTime\";\nimport { TableContainer } from \"@material-ui/core\";\nconst EMP_TIME_TODAY_ID = 'emp-time-today-';\n\nfunction empsTodayByCheckInSelector(state) {\n  const todayEmps = state.checkIn.todayEmps || [];\n  return todayEmps.sort((a, b) => {\n    if (a.checkIn && b.checkIn) {\n      if (a.checkIn < b.checkIn) return -1;\n    }\n\n    return 0;\n  });\n}\n\nconst LayoutDashboard = styled.div`\n  flex: 7 1 0%;\n  background-color: rgba(255,214,107,1);\n  display: flex;\n  .table-container{\n    max-height: 90vh;\n    scroll-behavior: smooth;\n  }\n  flex-direction: column;\n  .selected-row {\n    background-color: #F0F0F0;\n  }\n`;\n_c = LayoutDashboard;\n\nfunction TableTime() {\n  _s();\n\n  const {\n    getTimeOfEmpsToday\n  } = useCheckInAction();\n  const emps = useSelector(empsTodayByCheckInSelector);\n  const latestEmpCheckIn = useSelector(state => state.checkIn.latest); ///// Hook ///////\n\n  useEffect(() => {\n    getTimeOfEmpsToday();\n  }, [getTimeOfEmpsToday]);\n  console.log(\"emps emps:\", emps);\n  useEffect(() => {\n    if (latestEmpCheckIn) {\n      const curEle = document.getElementById(`${EMP_TIME_TODAY_ID}${latestEmpCheckIn.employeeId}`);\n\n      if (curEle) {\n        curEle.scrollIntoView();\n      }\n    }\n  }, [latestEmpCheckIn]);\n  return /*#__PURE__*/_jsxDEV(LayoutDashboard, {\n    className: \"h-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"md:px-10 mt-0.25 py-8 w-full \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shadow overflow-hidden rounded border-b border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          className: \"table-container\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: \"min-w-full bg-white\",\n            stickyHeader: true,\n            \"aria-label\": \"sticky table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \" text-white text-left py-3 px-4 uppercase font-semibold text-sm \",\n                  children: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"sticky top-0 bg-gray-800 text-white text-left py-3 px-4 uppercase font-semibold text-sm\",\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"sticky top-0 bg-gray-800 text-white text-left py-3 px-4 uppercase font-semibold text-sm\",\n                  children: \" Check-In\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"sticky top-0 bg-gray-800 text-white text-left py-3 px-4 uppercase font-semibold text-sm\",\n                  children: \"Check-Out\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"sticky top-0 bg-gray-800 text-white text-left py-3 px-4 uppercase font-semibold text-sm\",\n                  children: \"#Note\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              className: \"text-gray-700  \",\n              children: emps.length > 0 ? emps.map((emp, index) => {\n                var _emp$employeeId;\n\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  tabIndex: -1,\n                  id: `${EMP_TIME_TODAY_ID}${(_emp$employeeId = emp.employeeId) === null || _emp$employeeId === void 0 ? void 0 : _emp$employeeId.toString()}`,\n                  className: classNames({\n                    \"selected-row\": emp.employeeId === (latestEmpCheckIn === null || latestEmpCheckIn === void 0 ? void 0 : latestEmpCheckIn.employeeId)\n                  }),\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    className: \"text-left py-3 px-4\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 51\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    className: \"text-left py-3 px-4\",\n                    children: emp.nickName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 51\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    className: \"text-left py-3 px-4\",\n                    children: /*#__PURE__*/_jsxDEV(ShowMomentTime, {\n                      time: emp.checkIn\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 94\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 51\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    className: \"text-left py-3 px-4\",\n                    children: /*#__PURE__*/_jsxDEV(ShowMomentTime, {\n                      time: emp.checkOut\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 94\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 51\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    className: \"text-left py-3 px-4\",\n                    children: emp.note\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 51\n                  }, this)]\n                }, emp.employeeId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 49\n                }, this);\n              }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(TableCell, {\n                  colSpan: 5,\n                  className: \"justify-center\",\n                  children: 'No Employee Today'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 51\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 50\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TableTime, \"rjQSW5jFC5T8rFxxaoFnP9i0m4c=\", false, function () {\n  return [useCheckInAction, useSelector, useSelector];\n});\n\n_c2 = TableTime;\nexport default TableTime;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LayoutDashboard\");\n$RefreshReg$(_c2, \"TableTime\");","map":{"version":3,"sources":["/Users/auttapongkompiban/Spec_mycos/mycos-makub/src/components/Dashboard/TableTimetoday.tsx"],"names":["styled","React","useEffect","useSelector","useCheckInAction","Table","TableCell","classNames","ShowMomentTime","TableContainer","EMP_TIME_TODAY_ID","empsTodayByCheckInSelector","state","todayEmps","checkIn","sort","a","b","LayoutDashboard","div","TableTime","getTimeOfEmpsToday","emps","latestEmpCheckIn","latest","console","log","curEle","document","getElementById","employeeId","scrollIntoView","length","map","emp","index","toString","nickName","checkOut","note"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\nimport React,{useEffect} from 'react'\nimport { useSelector} from 'react-redux'\nimport useCheckInAction from '../../hooks/useCheckInAction'\nimport {RootState} from '../../store/reducers'\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport ITimeToday from \"../../types/ITimeToday\";\nimport classNames from 'classnames'\nimport ShowMomentTime from \"./ShowMomentTime\";\nimport { TableContainer } from \"@material-ui/core\";\n\n\n\nconst EMP_TIME_TODAY_ID = 'emp-time-today-'\nfunction empsTodayByCheckInSelector(state: RootState) {\n\n  const todayEmps = state.checkIn.todayEmps || []\n  return todayEmps.sort((a: ITimeToday, b: ITimeToday) => {\n    if (a.checkIn && b.checkIn) {\n      if (a.checkIn < b.checkIn)\n        return -1\n    }\n    return 0\n  })\n}\n\nconst LayoutDashboard = styled.div`\n  flex: 7 1 0%;\n  background-color: rgba(255,214,107,1);\n  display: flex;\n  .table-container{\n    max-height: 90vh;\n    scroll-behavior: smooth;\n  }\n  flex-direction: column;\n  .selected-row {\n    background-color: #F0F0F0;\n  }\n`;\nfunction TableTime() {\n\n    const {getTimeOfEmpsToday} = useCheckInAction()\n    const emps = useSelector(empsTodayByCheckInSelector)\n    const latestEmpCheckIn = useSelector((state: RootState) => state.checkIn.latest)\n  \n    ///// Hook ///////\n    useEffect(() => {\n        getTimeOfEmpsToday();\n    }, [getTimeOfEmpsToday])\n    console.log(\"emps emps:\", emps)\n\n    useEffect(() => {\n      if (latestEmpCheckIn) {\n        const curEle = document.getElementById(`${EMP_TIME_TODAY_ID}${latestEmpCheckIn.employeeId}`)\n        if (curEle){\n          curEle.scrollIntoView()\n        }\n      }\n    }, [latestEmpCheckIn])\n      return (\n        <LayoutDashboard className=\"h-screen\">\n          <div className=\"md:px-10 mt-0.25 py-8 w-full \">\n                    <div className=\"shadow overflow-hidden rounded border-b border-gray-200\">\n                    <TableContainer className=\"table-container\">\n                        <Table className=\"min-w-full bg-white\" stickyHeader aria-label=\"sticky table\">\n                                    <thead>\n                                    <tr>\n                                        <th className=\" text-white text-left py-3 px-4 uppercase font-semibold text-sm \">No</th>\n                                        <th className=\"sticky top-0 bg-gray-800 text-white text-left py-3 px-4 uppercase font-semibold text-sm\">Name</th>\n                                        <th className=\"sticky top-0 bg-gray-800 text-white text-left py-3 px-4 uppercase font-semibold text-sm\"> Check-In</th>\n                                        <th className=\"sticky top-0 bg-gray-800 text-white text-left py-3 px-4 uppercase font-semibold text-sm\">Check-Out</th>\n                                        <th className=\"sticky top-0 bg-gray-800 text-white text-left py-3 px-4 uppercase font-semibold text-sm\">#Note</th>\n                                    </tr>\n                                    </thead>\n                                        <tbody className=\"text-gray-700  \">\n                                            {emps.length > 0 ? emps.map((emp: ITimeToday, index: number) => {\n                                              return (\n                                                <tr\n                                                  tabIndex={-1} \n                                                  key={emp.employeeId}\n                                                  id={`${EMP_TIME_TODAY_ID}${emp.employeeId?.toString()}`}\n                                                  className={classNames({\"selected-row\": emp.employeeId === latestEmpCheckIn?.employeeId})}\n                                                >\n                                                  <TableCell className=\"text-left py-3 px-4\">{index + 1}</TableCell>\n                                                  <TableCell className=\"text-left py-3 px-4\">{emp.nickName}</TableCell>\n                                                  <TableCell className=\"text-left py-3 px-4\"><ShowMomentTime time={emp.checkIn} /></TableCell>\n                                                  <TableCell className=\"text-left py-3 px-4\"><ShowMomentTime time={emp.checkOut} /></TableCell>\n                                                  <TableCell className=\"text-left py-3 px-4\">{emp.note}</TableCell>\n                                                </tr>\n                                              );\n                                            }) : <tr>\n                                                  <TableCell colSpan={5} className=\"justify-center\">{'No Employee Today'}</TableCell>\n                                                </tr>}\n                                        </tbody>                       \n                            </Table>\n                    </TableContainer>\n                    </div>\n                </div>\n        </LayoutDashboard>\n        )\n    }\nexport default TableTime\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}