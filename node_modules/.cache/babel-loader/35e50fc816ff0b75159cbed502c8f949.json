{"ast":null,"code":"import { useContext } from \"react\";\nimport { ContextForm } from \"./useOwnContext\";\nimport { DISPATCHER_LABEL } from \"./../utils/constants\";\nexport function useSelector(fn) {\n  var _useContext = useContext(ContextForm),\n      state = _useContext.state,\n      mapFields = _useContext.mapFields;\n\n  var value;\n\n  try {\n    value = fn(state);\n  } catch (_unused) {\n    value = undefined;\n  }\n\n  var setFieldValue;\n\n  try {\n    var fieldDispatcher = fn(mapFields);\n    setFieldValue = (fieldDispatcher == null ? void 0 : fieldDispatcher[DISPATCHER_LABEL]) || fieldDispatcher;\n  } catch (_unused2) {\n    setFieldValue = undefined;\n  }\n\n  return [value, setFieldValue];\n}","map":{"version":3,"sources":["/Users/auttapongkompiban/Spec_mycos/mycos-makub/node_modules/usetheform/build/es/hooks/useSelector.js"],"names":["useContext","ContextForm","DISPATCHER_LABEL","useSelector","fn","_useContext","state","mapFields","value","_unused","undefined","setFieldValue","fieldDispatcher","_unused2"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,OAAO,SAASC,WAAT,CAAqBC,EAArB,EAAyB;AAC9B,MAAIC,WAAW,GAAGL,UAAU,CAACC,WAAD,CAA5B;AAAA,MACIK,KAAK,GAAGD,WAAW,CAACC,KADxB;AAAA,MAEIC,SAAS,GAAGF,WAAW,CAACE,SAF5B;;AAIA,MAAIC,KAAJ;;AAEA,MAAI;AACFA,IAAAA,KAAK,GAAGJ,EAAE,CAACE,KAAD,CAAV;AACD,GAFD,CAEE,OAAOG,OAAP,EAAgB;AAChBD,IAAAA,KAAK,GAAGE,SAAR;AACD;;AAED,MAAIC,aAAJ;;AAEA,MAAI;AACF,QAAIC,eAAe,GAAGR,EAAE,CAACG,SAAD,CAAxB;AACAI,IAAAA,aAAa,GAAG,CAACC,eAAe,IAAI,IAAnB,GAA0B,KAAK,CAA/B,GAAmCA,eAAe,CAACV,gBAAD,CAAnD,KAA0EU,eAA1F;AACD,GAHD,CAGE,OAAOC,QAAP,EAAiB;AACjBF,IAAAA,aAAa,GAAGD,SAAhB;AACD;;AAED,SAAO,CAACF,KAAD,EAAQG,aAAR,CAAP;AACD","sourcesContent":["import { useContext } from \"react\";\nimport { ContextForm } from \"./useOwnContext\";\nimport { DISPATCHER_LABEL } from \"./../utils/constants\";\nexport function useSelector(fn) {\n  var _useContext = useContext(ContextForm),\n      state = _useContext.state,\n      mapFields = _useContext.mapFields;\n\n  var value;\n\n  try {\n    value = fn(state);\n  } catch (_unused) {\n    value = undefined;\n  }\n\n  var setFieldValue;\n\n  try {\n    var fieldDispatcher = fn(mapFields);\n    setFieldValue = (fieldDispatcher == null ? void 0 : fieldDispatcher[DISPATCHER_LABEL]) || fieldDispatcher;\n  } catch (_unused2) {\n    setFieldValue = undefined;\n  }\n\n  return [value, setFieldValue];\n}"]},"metadata":{},"sourceType":"module"}