function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import { useState } from "react";
var initialStatus = {
  status: undefined,
  value: undefined
};
export function useAsyncValidation(asyncValidator) {
  var _useState = useState(function () {
    return _extends({}, initialStatus);
  }),
      status = _useState[0],
      setStatus = _useState[1];

  var onAsyncValidation = function onAsyncValidation(newStatus) {
    return setStatus(_extends({}, status, newStatus));
  };

  var resetAsyncErr = function resetAsyncErr() {
    return setStatus(_extends({}, initialStatus));
  };

  return [status, {
    onAsyncValidation: onAsyncValidation,
    asyncValidator: asyncValidator,
    resetAsyncErr: resetAsyncErr
  }];
}