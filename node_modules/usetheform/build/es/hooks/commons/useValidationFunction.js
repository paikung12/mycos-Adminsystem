import { useRef } from "react";
import { passValidation } from "./../../utils/passValidation";
import { getValidationMsg } from "./../../utils/getValidationMsg";
export function useValidationFunction(validators) {
  if (validators === void 0) {
    validators = [];
  }

  var validationMsg = useRef(undefined);
  var validationObj = useRef(null);
  var validationFN = useRef(function (value, stateForm) {
    var _passValidation = passValidation(value, validators, stateForm),
        isValid = _passValidation.isValid,
        checks = _passValidation.checks;

    validationMsg.current = getValidationMsg(checks);
    validationObj.current = {
      isValid: isValid,
      checks: checks
    };
    return isValid;
  });
  return {
    validationMsg: validationMsg,
    validationObj: validationObj,
    validationFN: validationFN
  };
}