import { useRef, useContext, useCallback } from "react";
import { IndexContext } from "./../../hoc/withIndex";
export var useNameProp = function useNameProp(context, name, index) {
  var nameProp = useRef(name);
  var uniqueIDFromContext = useContext(IndexContext);
  var uniqueIDarrayContext = uniqueIDFromContext !== undefined ? uniqueIDFromContext.id : 1;
  var setNameProp = useCallback(function (index) {
    nameProp.current = index;
  }, []);

  if (context.type === "array") {
    if (index !== undefined) {
      uniqueIDarrayContext = uniqueIDFromContext.getID();
      nameProp.current = index;
    } else if (nameProp.current === undefined) {
      nameProp.current = context.getIndex(uniqueIDarrayContext);
    }
  }

  return {
    nameProp: nameProp,
    uniqueIDarrayContext: uniqueIDarrayContext,
    setNameProp: setNameProp
  };
};