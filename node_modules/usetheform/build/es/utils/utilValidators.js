export function mergeValidators(path, value, clean) {
  var newValidators = {};

  if (typeof value === "object" && value !== null) {
    newValidators = Object.keys(value).reduce(function (acc, key) {
      if (clean) {
        acc[path + "/" + key] = undefined;
      } else if (value[key] !== undefined) {
        acc[path + "/" + key] = value[key];
      }

      return acc;
    }, {});
  } else if (typeof value === "function") {
    var _ref, _ref2;

    newValidators = clean ? (_ref = {}, _ref[path] = undefined, _ref) : (_ref2 = {}, _ref2[path] = value, _ref2);
  } else if (typeof value === "boolean" || value === null) {
    var _ref3, _ref4;

    // typeof value === "boolean" || value === null only for async validators
    // value === null if it is an asycn func added on a Collection
    var pathValue = value === null ? {
      type: "collection",
      isValid: value,
      counter: 0
    } : {
      type: "field",
      isValid: value,
      counter: 0
    };
    newValidators = clean ? (_ref3 = {}, _ref3[path] = undefined, _ref3) : (_ref4 = {}, _ref4[path] = pathValue, _ref4);
  }

  return newValidators;
}